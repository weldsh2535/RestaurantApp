{"version":3,"sources":["webpack:///src/app/Service/restaurant.service.ts","webpack:///src/app/driver-history/driver-history.page.html","webpack:///src/app/driver-history/driver-history.page.ts","webpack:///src/app/driver-history/driver-history.page.scss","webpack:///src/app/Service/order.service.ts","webpack:///src/app/Service/shared.service.ts","webpack:///src/app/driver-history/driver-history.module.ts","webpack:///src/app/driver-history/driver-history-routing.module.ts"],"names":["RestaurantService","db","restaurantCollectionList","collection","restaurantObj","add","restaurantList","snapshotChanges","pipe","actions","map","a","data","payload","doc","id","valueChanges","update","handleError","error","status","json","providedIn","DriverHistoryPage","orderService","accountService","restaurantService","listOfOrder","getOrderByDriverId","getRestaurant","getAllRestaurant","subscribe","res","listOfRestaurant","userId","localStorage","getItem","length","order","filter","c","OrderStatus","find","checked","val","forEach","element","getAllAccount","result","restaurant","accountId","RestaurantId","restaurantName","Name","DateTime","Customer","FullName","PhoneNumber","phonenumber","CLocation","FirstTimeLocation","RLocation","Location","Total","Driver","Vehicle","orderNo","orderLocation","restaurantStatus","push","massge","message","selector","template","OrderService","sharedService","cart","cartItemCount","orderStatus","orderItemCount","orderCollectionList","orderObj","values","then","docRef","orderId","next","orderList","ref","where","changes","driverId","items","amount","el","index","indexOf","orderDetailsId","splice","CookingTime","DeliveryTime","Description","Price","categoryId","Food","picture","restaurantId","type","value","product","added","p","entries","SharedService","location","RestaurantLocation","resId","DriverHistoryPageModule","imports","declarations","routes","path","component","DriverHistoryPageRoutingModule","forChild","exports"],"mappings":"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","file":"driver-history-driver-history-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject,Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Restaurant } from 'src/Table/table';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { AppError } from '../common/app-error';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n \n  private restaurantCollectionList: AngularFirestoreCollection<any>;\n  private restaurantList: Observable<any[]>;\n  constructor(private db: AngularFirestore) {\n    this.restaurantCollectionList = db.collection<Restaurant>('Restaurant');\n  }\n  create(restaurantObj) { \n    return this.restaurantCollectionList.add(restaurantObj)\n  }\n  getAllRestaurant() {\n    this.restaurantList = this.restaurantCollectionList.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n    return this.restaurantList;\n  }\n  getRestaurant(id) {\n    return this.restaurantCollectionList.doc<any>(id).valueChanges();\n  }\n  updateRestaurant(restaurantObj: Restaurant, id: string) {\n    return this.restaurantCollectionList.doc(id).update(restaurantObj)\n    .catch(this.handleError);\n  }\n  removeRestaurant(id) {\n    return this.restaurantCollectionList.doc(id).delete()\n    .catch(this.handleError);\n  }\n  private handleError(error: Response) {\n    if (error.status === 400)\n      return Observable.throw(new BadInput(error.json()));\n  \n    if (error.status === 404)\n      return Observable.throw(new NotFoundError());\n    \n    return Observable.throw(new AppError(error));\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Orders history</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div class=\\\"message\\\" *ngIf=\\\"massge\\\" >\\n    <ion-grid >\\n      <ion-row>\\n        <ion-label>{{message}}</ion-label>\\n      </ion-row>\\n    </ion-grid>\\n  </div>\\n  <div class=\\\"orders\\\">\\n    <ion-row *ngFor=\\\"let meal of listOfOrder ; let i = index\\\" class=\\\"ion-padding meal-row\\\">\\n      <ion-col size=\\\"8\\\" class=\\\"border-bottom\\\">\\n        <ion-label>\\n          {{ meal.restaurantName }}\\n          <p>{{ meal.DateTime }}</p>\\n          <ion-button fill=\\\"clear\\\" >\\n            Delivered\\n          </ion-button>\\n        </ion-label>\\n       </ion-col>\\n      <ion-col size=\\\"4\\\" class=\\\"border-bottom\\\">\\n        <ion-label>\\n          {{ meal.Customer }}\\n          <p>{{ meal.PhoneNumber }}</p>\\n        </ion-label>\\n        <p>Payment</p>\\n        <ion-label color=\\\"dark\\\"\\n        ><b> {{ meal.Total | currency:'ETB' }}</b></ion-label\\n      >\\n     </ion-col>\\n    </ion-row>\\n  </div>\\n</ion-content>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { Order, Restaurant } from 'src/Table/table';\nimport { AccountService } from '../Service/account.service';\nimport { OrderService } from '../Service/order.service';\nimport { RestaurantService } from '../Service/restaurant.service';\n\n@Component({\n  selector: 'app-driver-history',\n  templateUrl: './driver-history.page.html',\n  styleUrls: ['./driver-history.page.scss'],\n})\nexport class DriverHistoryPage implements OnInit {\n  listOfOrder: any[] = [];\n  listOfRestaurant: Restaurant[];\n  message: string;\n  massge: boolean;\n  constructor(private orderService: OrderService,\n    private accountService: AccountService,\n    private restaurantService: RestaurantService) { }\n\n  ngOnInit() {\n    this.getOrderByDriverId();\n    this.getRestaurant();\n  }\n  getRestaurant() {\n    this.restaurantService.getAllRestaurant().subscribe(res => {\n      this.listOfRestaurant = res;\n    })\n  }\n  getOrderByDriverId() {\n    let userId = localStorage.getItem(\"userId\");\n    this.orderService.getOrderByDriverId(userId).subscribe(res => {\n      if (res.length > 0) {\n        let order = res.filter(c => c.OrderStatus.find(c=>c.checked==true && c.val==\"delivered\"))\n        if (order.length > 0) {\n          order.forEach(element => {\n            this.accountService.getAllAccount().subscribe(result => {\n              let restaurant = this.listOfRestaurant.find(c => c.accountId == element.RestaurantId)\n              let data = {\n                id: element.id,\n                restaurantName: restaurant.Name,\n                DateTime: element.DateTime,\n                Customer: result.find(c => c.id == element.Customer).FullName,\n                PhoneNumber: result.find(c => c.id == element.Customer).phonenumber,\n                CLocation: result.find(c => c.id == element.Customer).FirstTimeLocation,\n                RLocation: element.Location,\n                OrderStatus: element.OrderStatus,\n                Total: element.Total,\n                Driver: element.Driver,\n                Vehicle: element.Vehicle,\n                orderNo: element.orderNo,\n                orderLocation: element.orderLocation,\n                restaurantStatus: element.restaurantStatus\n              }\n              this.listOfOrder.push(data);\n              // console.log(this.listOfOrder)\n            });\n          });\n        }\n      }\n      else{\n        this.massge = true\n        this.message =\"no order history\"\n      }\n    });\n  }\n}\n","export default \".message {\\n  padding-top: 3px;\\n  padding-left: 12px;\\n  color: #337ab7;\\n  font-size: 27px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGRyaXZlci1oaXN0b3J5LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFBO0VBQ0Esa0JBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtBQUNKIiwiZmlsZSI6ImRyaXZlci1oaXN0b3J5LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZXNzYWdle1xyXG4gICAgcGFkZGluZy10b3A6IDNweDtcclxuICAgIHBhZGRpbmctbGVmdDogMTJweDtcclxuICAgIGNvbG9yOiAjMzM3YWI3O1xyXG4gICAgZm9udC1zaXplOiAyN3B4O1xyXG4gIH0iXX0= */\";","import { Injectable } from '@angular/core';\nimport { AngularFirestoreCollection, AngularFirestore } from 'angularfire2/firestore';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { Order } from 'src/Table/table';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { SharedService } from './shared.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  private cart = [];\n  private cartItemCount = new BehaviorSubject(0);\n  RestaurantId = new BehaviorSubject<any>({});\n  orderStatus = new BehaviorSubject<any>({});\n  private orderCollectionList: AngularFirestoreCollection<any>;\n  private orderList: Observable<Order[]>;\n  amount: number;\n  private order=[];\n  private orderItemCount  = new BehaviorSubject(0);\n  constructor(private db: AngularFirestore,\n    private sharedService: SharedService) {\n    this.orderCollectionList = db.collection<Order>('Order');\n  }\n  create(orderObj) {\n    let values = this.orderCollectionList.add(orderObj)\n      .then((docRef) => {\n        this.sharedService.orderId.next(docRef.id);\n      })\n    return values;\n  }\n  getAllOrder() {\n    this.orderList = this.orderCollectionList.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n    return this.orderList;\n  }\n  getOrderBy(id){\n    const orderObj = this.db.collection('Order', ref => ref.where('id', '==', id)).snapshotChanges();\n    this.orderList = orderObj.pipe(\n      map(changes => changes.map(a => {\n        const data = a.payload.doc.data() as Order;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    );\n    return this.orderList;\n  }\n  getOrderByDriverId(driverId){\n    const orderObj = this.db.collection('Order', ref => ref.where('Driver', '==', driverId)).snapshotChanges();\n    this.orderList = orderObj.pipe(\n      map(changes => changes.map(a => {\n        const data = a.payload.doc.data() as Order;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    );\n    return this.orderList;\n  }\n  getOrder(id) {\n    return this.orderCollectionList.doc<any>(id).valueChanges();\n  }\n  updateOrder(orderObj: Order, id: string) {\n    return this.orderCollectionList.doc(id).update(orderObj)\n      .catch(this.handleError);\n  }\n  removeOrder(id) {\n    return this.orderCollectionList.doc(id).delete()\n      .catch(this.handleError);\n  }\n  private handleError(error: Response) {\n    if (error.status === 400)\n      return Observable.throw(new BadInput(error.json()));\n    if (error.status === 404)\n      return Observable.throw(new NotFoundError());\n    return Observable.throw(new AppError(error));\n  }\n  getCart() {\n    return this.cart;\n  }\n  getOrders(){\n    return this.order;\n  }\n  getCartItemCount() {\n    return this.cartItemCount;\n  }\n  getOrderItemCount(){\n    return this.orderItemCount;\n  }\n  getRestaurantId() {\n    return this.RestaurantId;\n  }\n  getOrderStatus() {\n    return this.orderStatus;\n  }\n  addOrder(items) {\n   this.order =[]\n   this.amount =0;\n    this.order.forEach(el=>{\n      let index = this.order.indexOf(c=>c.orderDetailsId===el.orderDetailsId)\n      this.order.splice(index,1)\n    });\n    this.orderItemCount.next(0);\n    items.forEach(element => {\n    this.amount = this.amount + element.amount\n      let data = {\n        CookingTime: element.CookingTime,\n        DeliveryTime: element.DeliveryTime,\n        Description: element.Description,\n        Name: element.Name,\n        Price: element.Price,\n        amount: element.amount,\n        categoryId: element.categoryId,\n        id: element.Food,\n        picture: element.picture,\n        restaurantId: element.restaurantId,\n        type:element.type,\n        orderDetailsId:element.orderDetailsId,\n      }\n      this.order.push(data);\n      });\n    this.orderItemCount.next(this.orderItemCount.value + this.amount);\n  }\n  addProduct(product) {\n    let added = false;\n    for (let p of this.cart) {\n      if (p.id === product.id) {\n        p.amount += 1;\n        added = true;\n        break;\n      }\n    }\n    if (!added) {\n      product.amount = 1;\n      this.cart.push(product);\n    }\n    this.cartItemCount.next(this.cartItemCount.value + 1);\n  }\n\n  decreaseProduct(product) {\n    for (let [index, p] of this.cart.entries()) {\n      if (p.id === product.id) {\n        p.amount -= 1;\n        if (p.amount == 0) {\n          this.cart.splice(index, 1);\n        }\n      }\n    }\n    this.cartItemCount.next(this.cartItemCount.value - 1);\n  }\n\n  removeProduct(product) {\n    for (let [index, p] of this.cart.entries()) {\n      if (p.id === product.id) {\n        this.cartItemCount.next(this.cartItemCount.value - p.amount);\n        this.cart.splice(index, 1);\n      }\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject,Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n  restaurant = new BehaviorSubject<any>({});\n  status= new BehaviorSubject<any>({});\n  location = new BehaviorSubject<any>({});\n  orderId = new BehaviorSubject<any> ({});\n  RestaurantLocation = new BehaviorSubject<any>({});\n  resId = new BehaviorSubject<any>({});\n  getLocation(){\n    return this.location;\n  }\n  getStatus(){\n    return this.status;\n  }\n  getRestaurantLocation(){\n    return this.RestaurantLocation;\n  }\n  getRestaurantId(){\n    return this.resId;\n  }\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { DriverHistoryPageRoutingModule } from './driver-history-routing.module';\n\nimport { DriverHistoryPage } from './driver-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    DriverHistoryPageRoutingModule\n  ],\n  declarations: [DriverHistoryPage]\n})\nexport class DriverHistoryPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DriverHistoryPage } from './driver-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: DriverHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class DriverHistoryPageRoutingModule {}\n"]}