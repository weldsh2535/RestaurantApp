{"version":3,"sources":["webpack:///src/app/cart-modal/cart-modal.page.html","webpack:///src/app/cart-modal/cart-modal.page.scss","webpack:///src/app/cart-modal/cart-modal.page.ts","webpack:///src/app/cart-modal/cart-modal.module.ts","webpack:///src/app/cart-modal/cart-modal-routing.module.ts"],"names":["CartModalPage","modalCtrl","alertCtrl","orderService","fb","router","restaurantService","orderDetailService","foodService","sharedService","cart","regform","group","currentDate","Date","toUTCString","minDate","toISOString","maxDate","statusDriver","val","isChecked","statusRestaurant","status","transactionType","DeliveryDate","DeliveryTime","DeliveryAddress","DeliveryFee","date","setDate","getDate","getCart","cartItemCount","getCartItemCount","id","getRestaurantId","value","getRestaurant","getFood","readNOId","getAllRestaurant","subscribe","res","listOfRestaurant","getAllFood","listOfFood","No","getAllOrder","result","length","orderNo","product","decreaseProduct","addProduct","presentAlertConfirm","reduce","i","j","amount","price","getTotal","get","dismiss","next","navigate","Total","forEach","element","restaurantId","find","c","order","dateTime","customer","localStorage","getItem","location","orderStatuses","total","getGrandTotal","driver","vehicle","orderLocation","restaurantStatuses","customerStatus","statuses","create","alert","Price","orderDetails","orderId","foodId","qty","toString","presentAlert","message","cssClass","header","buttons","present","text","role","handler","blah","console","log","removeProduct","selector","template","CartModalPageModule","imports","declarations","routes","path","component","CartModalPageRoutingModule","forChild","exports"],"mappings":"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","file":"cart-modal-cart-modal-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\" (click)=\\\"onclick()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"text-align: center;\\\">Order Details</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button  >\\n        <ion-badge *ngIf=\\\"cart.length > 0\\\">{{ cartItemCount | async }}</ion-badge>\\n        <ion-icon slot=\\\"icon-only\\\" class=\\\"cart-icon\\\" name=\\\"cart\\\"></ion-icon>\\n      </ion-button> \\n    </ion-buttons>\\n   </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <!-- <div class=\\\"ion-text-end\\\">\\n    <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\" color=\\\"dark\\\">\\n      <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n    </ion-button>\\n  </div> -->\\n  <div class=\\\"ion-padding\\\">\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let p of cart\\\" class=\\\"ion-text-wrap\\\">\\n        <ion-grid>\\n          <ion-row class=\\\"ion-align-items-center\\\">\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"decreaseCartItem(p)\\\">\\n                <ion-icon name=\\\"remove-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n              {{ p.amount }}\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"increaseCartItem(p)\\\">\\n                <ion-icon name=\\\"add-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" offset=\\\"5\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"removeCartItem(p)\\\">\\n                <ion-icon name=\\\"close-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"5\\\">\\n              <b>{{ p.Name }}</b>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <b>{{ p.Price | currency:'ETB'}}</b>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ p.amount * p.Price | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-item>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n             Sub Total:\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ getTotal() | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-item>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n             Grand Total:\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ getGrandTotal() | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n    </ion-list>\\n    <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n      <ion-label>Transation Type</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"transactionType\\\">\\n        <ion-select-option value=\\\"Delivery\\\">Delivery</ion-select-option>\\n        <ion-select-option value=\\\"Pickup\\\">Pickup</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery Date</ion-label>\\n      <ion-datetime formControlName=\\\"DeliveryDate\\\" display-format=\\\"MMM DD, YYYY HH:mm:ss\\\" value=\\\"1990-02-19T07:43Z\\\" [(ngModel)]=\\\"currentDate\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery fee</ion-label>\\n      <ion-input formControlName=\\\"DeliveryFee\\\" type=\\\"number\\\" (keyup)=\\\"getGrandTotal()\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery Time</ion-label>\\n      <ion-datetime formControlName=\\\"DeliveryTime\\\" display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"1\\\">\\n            <ion-label>\\n              <ion-icon style=\\\"height: 27px;\\n              width: 19px;\\\" name=\\\"location-outline\\\"></ion-icon>\\n            </ion-label>\\n           </ion-col>\\n          <ion-col size=\\\"8\\\">\\n           <ion-label>\\n             <p>Delivery to current Address</p>\\n             <p></p>\\n           </ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"3\\\">\\n            <ion-button (click)=\\\"location()\\\">\\n              change\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-button expand=\\\"full\\\" (click)=\\\"order(cart)\\\" slot=\\\"fixed\\\">\\n      Order\\n    </ion-button>\\n   \\n  </form>\\n  </div>\\n</ion-content>\";","export default \"ion-badge {\\n  color: #fff;\\n  position: absolute;\\n  top: -9px;\\n  right: 2px;\\n  border-radius: 100%;\\n}\\n\\n.cart-icon {\\n  font-size: 50px;\\n}\\n\\n.cart-length {\\n  color: var(--ion-color-primary);\\n  position: absolute;\\n  top: 18px;\\n  left: 25px;\\n  font-weight: 600;\\n  font-size: 1em;\\n  min-width: 25px;\\n  z-index: 10;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGNhcnQtbW9kYWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBVztFQUNYLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsVUFBVTtFQUNWLG1CQUFtQjtBQUN2Qjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSwrQkFBK0I7RUFDL0Isa0JBQWtCO0VBQ2xCLFNBQVM7RUFDVCxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGNBQWM7RUFDZCxlQUFlO0VBQ2YsV0FBVztBQUNiIiwiZmlsZSI6ImNhcnQtbW9kYWwucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWJhZGdlIHtcclxuICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAtOXB4O1xyXG4gICAgcmlnaHQ6IDJweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbn1cclxuIFxyXG4uY2FydC1pY29uIHtcclxuICBmb250LXNpemU6IDUwcHg7XHJcbn1cclxuIFxyXG4uY2FydC1sZW5ndGgge1xyXG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSk7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogMThweDtcclxuICBsZWZ0OiAyNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZm9udC1zaXplOiAxZW07XHJcbiAgbWluLXdpZHRoOiAyNXB4O1xyXG4gIHotaW5kZXg6IDEwO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController, ModalController } from '@ionic/angular';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Food, Restaurant } from 'src/Table/table';\r\nimport { FoodService } from '../Service/food.service';\r\nimport { OrderDetailService } from '../Service/order-detail.service';\r\nimport { OrderService } from '../Service/order.service';\r\nimport { RestaurantService } from '../Service/restaurant.service';\r\nimport { SharedService } from '../Service/shared.service';\r\n\r\n@Component({\r\n  selector: 'app-cart-modal',\r\n  templateUrl: './cart-modal.page.html',\r\n  styleUrls: ['./cart-modal.page.scss'],\r\n})\r\nexport class CartModalPage implements OnInit {\r\n  cart: any[] = [];\r\n  cartItemCount: BehaviorSubject<number>;\r\n  id: any;\r\n  regform = this.fb.group({});\r\n  currentDate = new Date().toUTCString();\r\n  minDate = new Date().toISOString();\r\n  maxDate = new Date().toISOString();\r\n  listOfRestaurant: Restaurant[];\r\n  orderId: any;\r\n  x: number;\r\n  listOfFood: Food[];\r\n  orderNo: number;\r\n  restaurantId: any;\r\n  Total: number;\r\n  status: {  val: string; isChecked: boolean; }[];\r\n  statusRestaurant: { val: string; isChecked: boolean; }[];\r\n  statusDriver: { val: string; isChecked: boolean; }[];\r\n  constructor(private modalCtrl: ModalController,\r\n              private alertCtrl: AlertController,\r\n              private orderService: OrderService,\r\n              private fb: FormBuilder,\r\n              private router: Router,\r\n              private restaurantService: RestaurantService,\r\n              private orderDetailService: OrderDetailService,\r\n              private foodService: FoodService,\r\n              private sharedService: SharedService) {\r\n      this.statusDriver = [\r\n        {  val: 'picked', isChecked: false },\r\n        { val: 'start moving', isChecked: false },\r\n        {  val: 'delivered', isChecked: false }\r\n      ];\r\n      this.statusRestaurant = [\r\n         {  val: 'order received', isChecked: true },\r\n         {  val: 'start cooking', isChecked: false },\r\n         {  val: 'cooked', isChecked: false },\r\n         { val: 'ready to service', isChecked: false }\r\n       ];\r\n      this.status = [\r\n         { val: 'Accept', isChecked: false},\r\n         { val: 'Reject', isChecked: false}\r\n       ];\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.regform = this.fb.group({\r\n      transactionType: [''],\r\n      DeliveryDate: [''],\r\n      DeliveryTime: [''],\r\n      DeliveryAddress: [''],\r\n      DeliveryFee: ['']\r\n    });\r\n    // setting min date\r\n    let date: Date = new Date();\r\n    date.setDate(date.getDate() - 5);\r\n    this.minDate = date.toISOString();\r\n    // setting max date\r\n    date = new Date();\r\n    date.setDate(date.getDate() + 5);\r\n    this.maxDate = date.toISOString();\r\n    /// to get data form service\r\n    this.cart = this.orderService.getCart();\r\n    this.cartItemCount = this.orderService.getCartItemCount();\r\n    this.id = this.orderService.getRestaurantId().value;\r\n    // console.log(this.id)\r\n    this.getRestaurant();\r\n    this.getFood();\r\n    this.readNOId();\r\n  }\r\n  getRestaurant() {\r\n    this.restaurantService.getAllRestaurant().subscribe(res => {\r\n      this.listOfRestaurant = res;\r\n    });\r\n  }\r\n  getFood() {\r\n    this.foodService.getAllFood().subscribe(res => {\r\n      this.listOfFood = res;\r\n    });\r\n  }\r\n  readNOId() {\r\n    let No = 0;\r\n    this.orderService.getAllOrder().subscribe((result) => {\r\n      if (result.length === 0) { No = 1; }\r\n      else { No = result.length + 1; }\r\n      this.orderNo = + No;\r\n    });\r\n  }\r\n  decreaseCartItem(product) {\r\n    this.orderService.decreaseProduct(product);\r\n  }\r\n\r\n  increaseCartItem(product) {\r\n    this.orderService.addProduct(product);\r\n  }\r\n\r\n  removeCartItem(product) {\r\n    // this.orderService.removeProduct(product);\r\n    this.presentAlertConfirm(product);\r\n  }\r\n\r\n  getTotal() {\r\n    return this.cart.reduce((i, j) => i + j.amount * j.price, 0);\r\n  }\r\n\r\n  getGrandTotal(){\r\n    return this.getTotal() + this.regform.get('DeliveryFee').value;\r\n  }\r\n  close() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n  location(){\r\n    this.sharedService.status.next('cart-modal');\r\n    this.router.navigate(['/menu/location']);\r\n  }\r\n  order(cart) {\r\n    this.Total = 0;\r\n    cart.forEach(element => {\r\n      this.restaurantId = element.restaurantId;\r\n    });\r\n    const res = this.listOfRestaurant.find(c => c.id === +this.restaurantId);\r\n    const order = {\r\n      restaurantId: this.restaurantId,\r\n      dateTime: this.regform.get('DeliveryDate').value,\r\n      customer: localStorage.getItem('userId'),\r\n      location: res.location, // to insert loging user (customer) of location\r\n      orderStatuses: this.statusDriver,\r\n      total: this.getGrandTotal(),\r\n      driver: 'null',\r\n      vehicle: 'null',\r\n      orderLocation: 'null', // or droupLocation\r\n      restaurantStatuses: this.statusRestaurant,\r\n      customerStatus: 'false',\r\n      statuses: this.status\r\n    };\r\n    // tslint:disable-next-line:no-shadowed-variable\r\n    this.orderService.create(order).subscribe( res => {\r\n       alert(res);\r\n      // tslint:disable-next-line:align\r\n      cart.forEach(element => {\r\n        this.restaurantId = element.restaurantId;\r\n        this.Total = this.Total + (element.Price * element.amount);\r\n        const orderDetails = {\r\n          orderId: this.orderNo,\r\n          foodId: element.id,\r\n          qty: element.amount,\r\n          price: element.price\r\n        };\r\n        // tslint:disable-next-line:no-shadowed-variable\r\n        this.orderDetailService.create(orderDetails).subscribe( res => {\r\n        alert(res.toString());\r\n        });\r\n      });\r\n    });\r\n    this.presentAlert('Add order succesfuly');\r\n    this.router.navigate(['/menu/order']);\r\n  }\r\n  async presentAlert(message) {\r\n    const alert = await this.alertCtrl.create({\r\n      cssClass: 'my-custom-class',\r\n       header: 'Order',\r\n      // subHeader: 'Subtitle',\r\n      message,\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n  async presentAlertConfirm(product) {\r\n    const alert = await this.alertCtrl.create({\r\n      header: 'Clear cart !',\r\n      message: '<strong>Are you sure you want to remove all items in your cart ?</strong>',\r\n      buttons: [\r\n        {\r\n          text: 'Cancel',\r\n          role: 'cancel',\r\n          cssClass: 'secondary',\r\n          handler: (blah) => {\r\n            console.log('Confirm Cancel: blah');\r\n          }\r\n        }, {\r\n          text: 'OK',\r\n          handler: () => {\r\n            this.orderService.removeProduct(product);\r\n          }\r\n        }\r\n      ]\r\n    });\r\n    await alert.present();\r\n  }\r\n  onclick() {\r\n    this.id = this.orderService.getRestaurantId().value;\r\n    this.router.navigate(['/menu/details/' + this.id]);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CartModalPageRoutingModule } from './cart-modal-routing.module';\n\nimport { CartModalPage } from './cart-modal.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CartModalPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [CartModalPage]\n})\nexport class CartModalPageModule {}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { CartModalPage } from './cart-modal.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CartModalPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CartModalPageRoutingModule {}\n"]}