{"version":3,"sources":["./src/app/account/account.page.html","./src/app/account/account.module.ts","./src/app/account/account.page.ts","./src/app/account/account.page.scss","./src/app/account/account-routing.module.ts"],"names":[],"mappings":"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","file":"account-account-module-es2015.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Account</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n      <!-- <ion-input formControlName=\\\"id\\\" hidden></ion-input> -->\\n      <ion-label>Full Name</ion-label>\\n      <ion-input formControlName=\\\"fullName\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('fullName').valid && regform.get('fullName').touched\\\" > This field is required! </small> \\n      </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email  </ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('email').valid && regform.get('email').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Phone number</ion-label>\\n      <ion-input formControlName=\\\"phonenumber\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('phonenumber').valid && regform.get('phonenumber').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Type</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"type\\\" (ngModelChange)=\\\"selectType($event)\\\">\\n        <ion-select-option value=\\\"driver\\\">Driver</ion-select-option>\\n        <ion-select-option value=\\\"restaurant\\\">Restaurant</ion-select-option>\\n        <ion-select-option value=\\\"customer\\\"> Customer</ion-select-option>\\n        <ion-select-option value=\\\"admin\\\">Admin</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Active</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"active\\\" (ngModelChange)=\\\"selectActive($event)\\\">\\n        <ion-select-option value=\\\"true\\\">true</ion-select-option>\\n        <ion-select-option value=\\\"false\\\">false</ion-select-option>\\n      </ion-select>\\n     </ion-item>\\n    <!-- <ion-item>\\n      <ion-label>Location On Order</ion-label>\\n      <ion-input formControlName=\\\"LocationOnOrder\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('LocationOnOrder').valid && regform.get('LocationOnOrder').touched\\\" > This field is required! </small> \\n    </ion-item> -->\\n    <ion-item>\\n      <ion-label>First Time Location</ion-label>\\n      <ion-input formControlName=\\\"locationId\\\" type=\\\"text\\\"></ion-input>\\n      <ion-icon name=\\\"location-outline\\\" (click)=\\\"openLocation()\\\"></ion-icon>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('locationId').valid && regform.get('locationId').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('password').valid && regform.get('password').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <div style=\\\"text-align: center; margin: auto;\\\">\\n      <ion-button id=\\\"add items\\\" (click)=\\\"SaveAccount()\\\"> \\n        <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n        {{editMode?'Update Account':'Add Account'}}</ion-button>\\n    </div>\\n</form>\\n<ion-item-sliding  *ngFor=\\\"let item of listOfAccount\\\" #slidingItem >\\n  <ion-item detail>\\n    <ion-label> {{item.fullName}}</ion-label>\\n    <ion-label> {{item.phonenumber}}</ion-label>\\n  </ion-item>\\n  <ion-item-options side=\\\"start\\\">\\n    <ion-item-option color=\\\"danger\\\" (click)=\\\"edit(item,slidingItem)\\\">\\n   <ion-icon  name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n   <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item,slidingItem)\\\">\\n    <ion-icon  name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n  </ion-item-options>\\n</ion-item-sliding>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccountPageRoutingModule } from './account-routing.module';\n\nimport { AccountPage } from './account.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountPageRoutingModule,\n   ReactiveFormsModule\n  ],\n  declarations: [AccountPage]\n})\nexport class AccountPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, IonItemSliding, Platform } from '@ionic/angular';\nimport { Account } from 'src/Table/table';\nimport { AccountService } from '../Service/account.service';\nimport { SharedService } from '../Service/shared.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.page.html',\n  styleUrls: ['./account.page.scss'],\n})\nexport class AccountPage implements OnInit {\n  regform = this.fb.group({});\n  accountId: number;\n  editMode: boolean;\n  SelectedCustomerId: string;\n  listOfAccount: Account[];\n  usePicker: boolean;\n  latitude: any;\n  longtiude: any;\n  constructor(private fb: FormBuilder,\n              private accountService: AccountService,\n              private alertController: AlertController,\n              private platform: Platform,\n              private sharedService: SharedService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      email: ['', Validators.email],\n      phonenumber: ['', Validators.required],\n      password: ['', Validators.required],\n      fullName: ['', Validators.required],\n      locationId: [''],\n      type: [''],\n      active: ['']\n    });\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n      this.platform.is('desktop')\n    ) {\n      this.usePicker = true;\n    }\n    this.getAccount();\n    this.sharedService.location.subscribe(res => {\n      this.latitude = res.lat;\n      this.longtiude = res.lon;\n      console.log(res);\n    });\n  }\n  getAccount() {\n    this.accountService.getAllAccount().subscribe(res => {\n      this.listOfAccount = res;\n      console.log(res);\n    });\n  }\n  selectType(event) {\n    const active = this.regform.get('active').value;\n    this.accountService.getAllAccount().subscribe(res => {\n      if (active !== '') {\n        this.listOfAccount = res.filter(c => c.type === event && c.active === active);\n      }\n      else {\n        this.listOfAccount = res.filter(c => c.type === event);\n      }\n    });\n  }\n  selectActive(event) {\n    const type = this.regform.get('type').value;\n    this.accountService.getAllAccount().subscribe(res => {\n      if (type !== '') {\n        this.listOfAccount = res.filter(c => c.active === event && c.type === type);\n      }\n      else {\n        this.listOfAccount = res.filter(c => c.active === event);\n      }\n    });\n  }\n  openLocation() {\n    this.sharedService.status.next('account');\n    this.router.navigate(['/menu/location']);\n  }\n  SaveAccount() {\n    if (this.regform.valid) {\n      const locationData = {\n        latitude: this.latitude,\n        longtude: this.longtiude\n      };\n      this.regform.get('locationId').setValue(locationData);\n      if (!this.accountId) {\n        this.accountService.create(this.regform.value).subscribe(res => {\n          alert(res.toString());\n        });\n      }\n      else {\n        const data = {\n          id: this.accountId,\n          email: this.regform.get('email').value,\n          phonenumber: this.regform.get('phonenumber').value,\n          password: this.regform.get('password').value,\n          fullName: this.regform.get('fullName').value,\n          locationId: this.regform.get('locationId').value,\n          type: this.regform.get('type').value,\n          active: this.regform.get('active').value\n        };\n        this.accountService.updateAccount(data).subscribe(res => {\n          alert(res.toString());\n        });\n      }\n      this.regform.reset();\n      this.presentAlert();\n      this.accountId = null;\n    }\n    else {\n      this.ErrorAlert();\n    }\n  }\n  edit(account: Account, sliding: IonItemSliding) {\n    this.editMode = true;\n    this.accountId = account.id;\n    this.regform.get('fullName').setValue(account.fullName);\n    this.regform.get('locationId').setValue(account.locationId);\n    this.regform.get('email').setValue(account.email);\n    this.regform.get('password').setValue(account.password);\n    this.regform.get('phonenumber').setValue(account.phonenumber);\n    this.regform.get('active').setValue(account.active);\n    this.regform.get('type').setValue(account.type);\n    sliding.close();\n  }\n  delete(account: Account, sliding: IonItemSliding) {\n    this.presentAlertConfirm(account);\n    sliding.close();\n  }\n  async presentAlertConfirm(account: Account) {\n    const alert1 = await this.alertController.create({\n      header: 'Confirm!',\n      message: '<strong>Are you sure you want delete?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.accountService.removeAccount(account.id).then(res => {\n              alert(res.toString());\n            });\n            this.regform.reset();\n            this.accountId = null;\n          }\n        }\n      ]\n    });\n\n    await alert1.present();\n  }\n  async ErrorAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      // subHeader: 'Subtitle',\n      message: 'Please Enter All field.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Account',\n      // subHeader: 'Subtitle',\n      message: 'Account Saved successfully.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n}\n","export default \".label-class {\\n  --inner-padding-start:12px;\\n  --inner-padding-end:10px;\\n  margin-left: 67px;\\n}\\n\\n.label-class-al {\\n  margin-left: 67px;\\n}\\n\\n.ion-input {\\n  margin-left: 67px;\\n}\\n\\n.dx-lookup-field {\\n  padding: 5px 23px 12px 54px;\\n  font-size: 1em;\\n}\\n\\nion-content ion-item {\\n  padding: 0;\\n  --border-radius: 14px;\\n}\\n\\nion-content ion-searchbar {\\n  --border-radius: 14px;\\n  --background: rgb(243, 243, 243);\\n  margin-top: -13px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFjY291bnQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksMEJBQXNCO0VBQ3RCLHdCQUFvQjtFQUNwQixpQkFBaUI7QUFBckI7O0FBRUU7RUFDRSxpQkFBaUI7QUFDckI7O0FBQ0U7RUFDRSxpQkFBaUI7QUFFckI7O0FBQUU7RUFDRSwyQkFBMkI7RUFDM0IsY0FBYztBQUdsQjs7QUFERTtFQUtNLFVBQVU7RUFFVixxQkFBZ0I7QUFEeEI7O0FBTkU7RUFZRSxxQkFBZ0I7RUFDaEIsZ0NBQWE7RUFDYixpQkFBaUI7QUFGckIiLCJmaWxlIjoiYWNjb3VudC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmxhYmVsLWNsYXNze1xyXG4gICAgLS1pbm5lci1wYWRkaW5nLXN0YXJ0OjEycHg7XHJcbiAgICAtLWlubmVyLXBhZGRpbmctZW5kOjEwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNjdweDtcclxuICB9XHJcbiAgLmxhYmVsLWNsYXNzLWFse1xyXG4gICAgbWFyZ2luLWxlZnQ6IDY3cHg7XHJcbiAgfVxyXG4gIC5pb24taW5wdXR7XHJcbiAgICBtYXJnaW4tbGVmdDogNjdweDtcclxuICB9XHJcbiAgLmR4LWxvb2t1cC1maWVsZCB7XHJcbiAgICBwYWRkaW5nOiA1cHggMjNweCAxMnB4IDU0cHg7XHJcbiAgICBmb250LXNpemU6IDFlbTtcclxuICB9XHJcbiAgaW9uLWNvbnRlbnQge1xyXG4gICAgLy8tLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSg0Myw5MCwxNDgsMSkgMCUsIHJnYmEoNDUsMTEyLDIyOSwxKSAzNSUsIHJnYmEoNDUsMTEyLDIyOSwxKSAxMDAlKTtcclxuICAgXHJcbiAgICAgIGlvbi1pdGVtIHtcclxuICAgICAgLy8gLS1iYWNrZ3JvdW5kOiByZ2IoMTIwLCAxMjYsIDEzNCk7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgIC8vIG1hcmdpbjogMTRweCAwO1xyXG4gICAgICAgIC0tYm9yZGVyLXJhZGl1czogMTRweDtcclxuICAgICAgIC8vIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgICAgIC8vZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgfVxyXG4gICBpb24tc2VhcmNoYmFye1xyXG4gICAgLS1ib3JkZXItcmFkaXVzOiAxNHB4O1xyXG4gICAgLS1iYWNrZ3JvdW5kOiByZ2IoMjQzLCAyNDMsIDI0Myk7XHJcbiAgICBtYXJnaW4tdG9wOiAtMTNweDtcclxuICAgfVxyXG4gIH0iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountPage } from './account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountPageRoutingModule {}\n"],"sourceRoot":"webpack:///"}