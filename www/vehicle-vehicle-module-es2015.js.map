{"version":3,"sources":["./src/app/vehicle/vehicle-routing.module.ts","./src/app/vehicle/vehicle.page.scss","./src/app/vehicle/vehicle.page.html","./src/app/vehicle/vehicle.module.ts","./src/app/vehicle/vehicle.page.ts"],"names":[],"mappings":"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","file":"vehicle-vehicle-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VehiclePage } from './vehicle.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VehiclePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VehiclePageRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ2ZWhpY2xlLnBhZ2Uuc2NzcyJ9 */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Vehicle</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n       <ion-label>Name of Plate </ion-label>\\n       <ion-input formControlName=\\\"Plate\\\" type=\\\"text\\\"></ion-input>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('Plate').valid && regform.get('Plate').touched\\\" > This field is required! </small> \\n     </ion-item>\\n     <ion-item>\\n      <ion-label>Type</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"Type\\\" [(ngModel)]=\\\"defaultType\\\">\\n        <ion-select-option value=\\\"motorcycles\\\">motorcycles</ion-select-option>\\n        <ion-select-option value=\\\"cars\\\">cars</ion-select-option>\\n        <ion-select-option value=\\\" trucks\\\"> trucks</ion-select-option>\\n        <ion-select-option value=\\\"buses\\\">buses</ion-select-option>\\n      </ion-select> <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('Type').valid && regform.get('Type').touched\\\" > This field is required! </small> \\n    </ion-item>\\n     <ion-item>\\n       <ion-label>Model</ion-label>\\n       <ion-input formControlName=\\\"Model\\\" type=\\\"text\\\"></ion-input>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('Model').valid && regform.get('Model').touched\\\" > This field is required! </small> \\n     </ion-item>\\n     <ion-item>\\n       <ion-label>MotorNumber</ion-label>\\n       <ion-input formControlName=\\\"MotorNumber\\\" type=\\\"text\\\"></ion-input>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('MotorNumber').valid && regform.get('MotorNumber').touched\\\" > This field is required! </small> \\n     </ion-item>\\n     <div style=\\\"text-align: center; margin: auto;\\\">\\n       <ion-button id=\\\"add items\\\" (click)=\\\"saveVehicle()\\\"> \\n         <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n         {{editMode?'Update Vehicle':'Add Vehicle'}}</ion-button>\\n     </div> \\n </form>\\n <ion-item-sliding *ngFor=\\\"let item of listOfVehicle \\\" #slidingItem >\\n  <ion-item detail>\\n    <ion-label>{{item.Plate}}</ion-label>\\n    <ion-label>{{item.Type}}</ion-label>\\n    <ion-label>{{item.Model}}</ion-label>\\n    <ion-label>{{item.MotorNumber}} </ion-label>\\n  </ion-item>\\n  <ion-item-options side=\\\"start\\\">\\n    <ion-item-option color=\\\"danger\\\" (click)=\\\"edit(item,slidingItem)\\\">\\n   <ion-icon  name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n   <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item,slidingItem)\\\">\\n    <ion-icon  name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n  </ion-item-options>\\n</ion-item-sliding>\\n\\n</ion-content>\\n\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VehiclePageRoutingModule } from './vehicle-routing.module';\n\nimport { VehiclePage } from './vehicle.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VehiclePageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [VehiclePage]\n})\nexport class VehiclePageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, IonItemSliding, Platform } from '@ionic/angular';\nimport { Vehicle } from 'src/Table/table';\nimport { VehicleService } from '../Service/vehicle.service';\n\n@Component({\n  selector: 'app-vehicle',\n  templateUrl: './vehicle.page.html',\n  styleUrls: ['./vehicle.page.scss'],\n})\nexport class VehiclePage implements OnInit {\n  regform = this.fb.group({});\n  vechileId: string;\n  listOfVehicle: Vehicle[];\n  editMode: boolean;\n  base64textString: string;\n  defaultType=\"motorcycles\";\n  usePicker: boolean;\n  constructor(private fb: FormBuilder,\n    private vehicleService: VehicleService,\n    private alertController: AlertController,\n    private platform:Platform) { }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      Plate: [\"\", Validators.required],\n      Type: [\"\", Validators.required],\n      Model: [\"\", Validators.required],\n      MotorNumber: [\"\", Validators.required],\n    });\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n    this.platform.is('desktop')\n  ) {\n    this.usePicker = true;\n  }\n    this.getVehicle();\n  }\n  getVehicle() {\n    this.vehicleService.getAllVehicle().subscribe(res => {\n      this.listOfVehicle = res;\n    })\n  }\n  saveVehicle() {\n    if (this.regform.valid) {\n      if (!this.vechileId) {\n        this.vehicleService.create(this.regform.value);\n      }\n      else {\n        this.vehicleService.updateVehicle(this.regform.value, this.vechileId)\n      }\n      this.regform.reset();\n      this.presentAlert();\n      this.vechileId = null;\n    }\n    else {\n      this.ErrorAlert();\n    }\n  }\n  edit(vehicle: Vehicle, slidingItem: IonItemSliding) {\n    this.editMode = true;\n    this.vechileId = vehicle.id;\n    this.regform.get('Model').setValue(vehicle.Model);\n    this.regform.get('MotorNumber').setValue(vehicle.MotorNumber);\n    this.regform.get('Plate').setValue(vehicle.Plate);\n    this.regform.get('Type').setValue(vehicle.Type);\n    slidingItem.close();\n  }\n  delete(vehicle: Vehicle, slidingItem: IonItemSliding) {\n    this.presentAlertConfirm(vehicle);\n    slidingItem.close();\n  }\n  async presentAlertConfirm(vehicle: Vehicle) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: '<strong>Are you sure you want delete?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.vehicleService.removeVehicle(vehicle.id);\n            this.regform.reset();\n            this.vechileId = null;\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n  async ErrorAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      // subHeader: 'Subtitle',\n      message: 'Please Enter All field.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'vehicle ',\n      // subHeader: 'Subtitle',\n      message: 'vehicle Saved successfully.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n\n}\n"],"sourceRoot":"webpack:///"}