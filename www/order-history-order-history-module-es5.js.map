{"version":3,"sources":["webpack:///src/app/Service/restaurant.service.ts","webpack:///src/app/order-history/order-history.page.ts","webpack:///src/app/order-history/order-history.page.scss","webpack:///src/app/order-history/order-history-routing.module.ts","webpack:///src/app/order-history/order-history.page.html","webpack:///src/app/order-history/order-history.module.ts"],"names":["RestaurantService","db","restaurantCollectionList","collection","restaurantObj","add","restaurantList","snapshotChanges","pipe","actions","map","a","data","payload","doc","id","valueChanges","update","handleError","error","status","json","providedIn","OrderHistoryPage","modalCtrl","alertCtrl","orderService","fb","router","restaurantService","orderDetailService","foodService","sharedService","cart","regform","group","currentDate","Date","toUTCString","minDate","toISOString","maxDate","transactionType","DeliveryDate","DeliveryTime","DeliveryAddress","date","setDate","getDate","getOrders","getStatus","value","console","log","cartItemCount","getOrderItemCount","getRestaurantId","getRestaurant","getFood","readNOId","getAllRestaurant","subscribe","res","listOfRestaurant","getAllFood","listOfFood","No","getAllOrder","result","length","orderNo","product","decreaseProduct","addProduct","presentAlertConfirm","reduce","i","j","amount","Price","dismiss","Total","forEach","element","restaurantId","orderDetails","OrderId","Restaurant","Food","Qty","create","order","DateTime","get","Customer","localStorage","getItem","Location","find","c","OrderStatus","Driver","Vehicle","orderLocation","header","message","buttons","text","role","cssClass","handler","blah","removeProduct","alert","present","navigate","selector","template","routes","path","component","OrderHistoryPageRoutingModule","imports","forChild","exports","OrderHistoryPageModule","declarations"],"mappings":"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","file":"order-history-order-history-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject,Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Restaurant } from 'src/Table/table';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { AppError } from '../common/app-error';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n \n  private restaurantCollectionList: AngularFirestoreCollection<any>;\n  private restaurantList: Observable<any[]>;\n  constructor(private db: AngularFirestore) {\n    this.restaurantCollectionList = db.collection<Restaurant>('Restaurant');\n  }\n  create(restaurantObj) { \n    return this.restaurantCollectionList.add(restaurantObj)\n  }\n  getAllRestaurant() {\n    this.restaurantList = this.restaurantCollectionList.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n    return this.restaurantList;\n  }\n  getRestaurant(id) {\n    return this.restaurantCollectionList.doc<any>(id).valueChanges();\n  }\n  updateRestaurant(restaurantObj: Restaurant, id: string) {\n    return this.restaurantCollectionList.doc(id).update(restaurantObj)\n    .catch(this.handleError);\n  }\n  removeRestaurant(id) {\n    return this.restaurantCollectionList.doc(id).delete()\n    .catch(this.handleError);\n  }\n  private handleError(error: Response) {\n    if (error.status === 400)\n      return Observable.throw(new BadInput(error.json()));\n  \n    if (error.status === 404)\n      return Observable.throw(new NotFoundError());\n    \n    return Observable.throw(new AppError(error));\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ModalController, AlertController } from '@ionic/angular';\nimport { Restaurant, Food } from 'src/Table/table';\nimport { FoodService } from '../Service/food.service';\nimport { OrderDetailService } from '../Service/order-detail.service';\nimport { OrderService } from '../Service/order.service';\nimport { RestaurantService } from '../Service/restaurant.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { SharedService } from '../Service/shared.service';\n@Component({\n  selector: 'app-order-history',\n  templateUrl: './order-history.page.html',\n  styleUrls: ['./order-history.page.scss'],\n})\nexport class OrderHistoryPage implements OnInit {\n\n  cart: any[] = [];\n  cartItemCount: BehaviorSubject<number>;\n  id: any;\n  regform = this.fb.group({});\n  currentDate = new Date().toUTCString();\n  minDate = new Date().toISOString();\n  maxDate = new Date().toISOString();\n  listOfRestaurant: Restaurant[];\n  orderId: any;\n  x: number;\n  listOfFood: Food[];\n  orderNo: number;\n  restaurantId: any;\n  Total: number;\n  status: any;\n  constructor(private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private orderService: OrderService,\n    private fb: FormBuilder,\n    private router:Router,\n    private restaurantService:RestaurantService,\n    private orderDetailService:OrderDetailService,\n    private foodService:FoodService,\n    private sharedService:SharedService) { }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      transactionType: [\"\"],\n      DeliveryDate: [\"\"],\n      DeliveryTime: [\"\"],\n      DeliveryAddress: [\"\"]\n    })\n    //setting min date\n    let date: Date = new Date();\n    date.setDate(date.getDate() - 5);\n    this.minDate = date.toISOString();\n    //setting max date\n    date = new Date();\n    date.setDate(date.getDate() + 5);\n    this.maxDate = date.toISOString();\n    ///to get data form service\n    this.cart = this.orderService.getOrders();\n    this.status = this.sharedService.getStatus().value;\n    console.log(this.status);\n    this.cartItemCount = this.orderService.getOrderItemCount();\n    this.id = this.orderService.getRestaurantId().value;\n    //console.log(this.id)\n    this.getRestaurant();\n    this.getFood();\n    this.readNOId();\n  }\n  getRestaurant(){\n    this.restaurantService.getAllRestaurant().subscribe(res=>{\n      this.listOfRestaurant = res;\n    })\n  }\n  getFood(){\n    this.foodService.getAllFood().subscribe(res=>{\n      this.listOfFood = res;\n    })\n  }\n  readNOId() {\n    let No = 0;\n    this.orderService.getAllOrder().subscribe((result) => {\n      if (result.length == 0) No = 1;\n      else No = result.length + 1;\n      this.orderNo =  + No;\n    });\n  }\n  decreaseCartItem(product) {\n    this.orderService.decreaseProduct(product);\n  }\n\n  increaseCartItem(product) {\n    this.orderService.addProduct(product);\n  }\n\n  removeCartItem(product) {\n    //this.orderService.removeProduct(product);\n    this.presentAlertConfirm(product);\n  }\n\n  getTotal() {\n    return this.cart.reduce((i, j) => i + j.amount * j.Price, 0);\n  }\n\n  close() {\n    this.modalCtrl.dismiss();\n  }\n\n  order(cart) {\n    this.Total = 0;\n    cart.forEach(element => {\n      this.restaurantId =element.restaurantId\n      this.Total = this.Total+(element.Price*element.amount)\n      let orderDetails = {\n          OrderId:this.orderNo,\n          Restaurant: element.restaurantId,\n          Food:element.id,\n          Qty: element.amount,\n          Price:element.Price\n         }\n         this.orderDetailService.create(orderDetails);\n       });\n     let order = {\n      DateTime: this.regform.get('DeliveryDate').value,\n      Customer: localStorage.getItem(\"userId\"),\n      Location:this.listOfRestaurant.find(c=>c.id==this.restaurantId).Location,\n      OrderStatus: this.regform.get('transactionType').value,\n      Total: this.Total,\n      orderNo:this.orderNo,\n      Driver: null,\n      Vehicle: null, \n      orderLocation:null //or droupLocation\n     }\n     this.orderService.create(order);\n  }\n  async presentAlertConfirm(product) {\n    const alert = await this.alertCtrl.create({\n      header: 'Clear cart !',\n      message: '<strong>Are you sure you want to remove all items in your cart ?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.orderService.removeProduct(product);\n           }\n        }\n      ]\n    });\n    await alert.present();\n  }\nbackPage(){\n  if(this.status==\"driver\"){\n    this.router.navigate([\"/menu/driver-home\"]); \n  }\n  else if(this.status ==\"restaurant-home\"){\n    this.router.navigate([\"/menu/restaurant-home\"]); \n  }\n  else if(this.status ==\"restaurant-history\"){\n    this.router.navigate([\"/menu/restaurant-history\"]);\n  }\n  else{\n    this.router.navigate([\"/menu/order\"]);\n  }\n  \n}\n}\n","export default \"ion-badge {\\n  color: #fff;\\n  position: absolute;\\n  top: -9px;\\n  right: 2px;\\n  border-radius: 100%;\\n}\\n\\n.cart-icon {\\n  font-size: 50px;\\n}\\n\\n.cart-length {\\n  color: var(--ion-color-primary);\\n  position: absolute;\\n  top: 18px;\\n  left: 25px;\\n  font-weight: 600;\\n  font-size: 1em;\\n  min-width: 25px;\\n  z-index: 10;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXG9yZGVyLWhpc3RvcnkucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUVBO0VBQ0UsK0JBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7QUFDRiIsImZpbGUiOiJvcmRlci1oaXN0b3J5LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1iYWRnZSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogLTlweDtcclxuICAgIHJpZ2h0OiAycHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG59XHJcbiBcclxuLmNhcnQtaWNvbiB7XHJcbiAgZm9udC1zaXplOiA1MHB4O1xyXG59XHJcbiBcclxuLmNhcnQtbGVuZ3RoIHtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDE4cHg7XHJcbiAgbGVmdDogMjVweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGZvbnQtc2l6ZTogMWVtO1xyXG4gIG1pbi13aWR0aDogMjVweDtcclxuICB6LWluZGV4OiAxMDtcclxufVxyXG4iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { OrderHistoryPage } from './order-history.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: OrderHistoryPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class OrderHistoryPageRoutingModule {}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\" (click)=\\\"backPage()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"text-align: center;\\\">Detail orders</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <!-- <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"share-outline\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search-outline\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button> -->\\n      <ion-button  >\\n        <ion-badge *ngIf=\\\"cart.length > 0\\\">{{ cartItemCount | async }}</ion-badge>\\n        <ion-icon slot=\\\"icon-only\\\" class=\\\"cart-icon\\\" name=\\\"cart\\\"></ion-icon>\\n      </ion-button> \\n    </ion-buttons>\\n   </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <!-- <div class=\\\"ion-text-end\\\">\\n    <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\" color=\\\"dark\\\">\\n      <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n    </ion-button>\\n  </div> -->\\n  <div class=\\\"ion-padding\\\">\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let p of cart\\\" class=\\\"ion-text-wrap\\\">\\n        <ion-grid>\\n          <ion-row class=\\\"ion-align-items-center\\\">\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" >\\n                <ion-icon name=\\\"remove-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n              {{ p.amount }}\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" >\\n                <ion-icon name=\\\"add-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" offset=\\\"5\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" >\\n                <ion-icon name=\\\"close-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"5\\\">\\n              <b>{{ p.Name }}</b>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <b>{{ p.Price | currency:'ETB'}}</b>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ p.amount * p.Price | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-item>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n              Total:\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ getTotal() | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n    </ion-list>\\n   \\n  </div>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { OrderHistoryPageRoutingModule } from './order-history-routing.module';\n\nimport { OrderHistoryPage } from './order-history.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    OrderHistoryPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [OrderHistoryPage]\n})\nexport class OrderHistoryPageModule {}\n"]}