{"version":3,"sources":["webpack:///src/app/food-content/food-content.page.ts","webpack:///src/app/food-content/food-content.page.scss","webpack:///src/app/food-content/food-content.page.html","webpack:///src/app/food-content/food-content.module.ts","webpack:///src/app/Service/food-content.service.ts","webpack:///src/app/food-content/food-content-routing.module.ts"],"names":["FoodContentPage","fb","foodContentService","foodService","alertController","platform","regform","group","FoodId","ContentName","required","ContentDescription","qty","is","usePicker","getFoodContent","getFood","getAllFood","subscribe","res","listOfFood","defualtFoodContent","Name","getAllFoodContent","listOfFoodContent","valid","foodId","create","value","updateFoodContent","reset","presentAlert","ErrorAlert","food","slidingItem","editMode","id","get","setValue","foodContentName","foodContentDescription","close","presentAlertConfirm","header","message","buttons","text","role","cssClass","handler","blah","console","log","removeFoodContent","alert","present","selector","template","FoodContentPageModule","imports","declarations","FoodContentService","http","APIURL","val","post","put","toPromise","error","status","json","providedIn","routes","path","component","FoodContentPageRoutingModule","forChild","exports"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAYaA,eAAe;AAU1B,iCAAoBC,EAApB,EACUC,kBADV,EAEUC,WAFV,EAGUC,eAHV,EAIUC,QAJV,EAI6B;AAAA;;AAJT,eAAAJ,EAAA,GAAAA,EAAA;AACV,eAAAC,kBAAA,GAAAA,kBAAA;AACA,eAAAC,WAAA,GAAAA,WAAA;AACA,eAAAC,eAAA,GAAAA,eAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AAZV,eAAAC,OAAA,GAAU,KAAKL,EAAL,CAAQM,KAAR,CAAc,EAAd,CAAV;AAYgC;;AAdN;AAAA;AAAA,iBAgB1B,oBAAW;AACT,iBAAKD,OAAL,GAAe,KAAKL,EAAL,CAAQM,KAAR,CAAc;AAC3BC,oBAAM,EAAE,CAAC,EAAD,CADmB;AAE3BC,yBAAW,EAAE,CAAC,EAAD,EAAK,0DAAWC,QAAhB,CAFc;AAG3BC,gCAAkB,EAAE,CAAC,EAAD,EAAK,0DAAWD,QAAhB,CAHO;AAI3BE,iBAAG,EAAE,CAAC,EAAD,EAAK,0DAAWF,QAAhB;AAJsB,aAAd,CAAf;;AAMA,gBAAK,KAAKL,QAAL,CAAcQ,EAAd,CAAiB,QAAjB,KAA8B,CAAC,KAAKR,QAAL,CAAcQ,EAAd,CAAiB,QAAjB,CAAhC,IACJ,KAAKR,QAAL,CAAcQ,EAAd,CAAiB,SAAjB,CADA,EAEA;AACA,mBAAKC,SAAL,GAAiB,IAAjB;AACD;;AACC,iBAAKC,cAAL;AACA,iBAAKC,OAAL;AACD;AA9ByB;AAAA;AAAA,iBA+B1B,mBAAO;AAAA;;AACL,iBAAKb,WAAL,CAAiBc,UAAjB,GAA8BC,SAA9B,CAAwC,UAAAC,GAAG,EAAE;AAC3C,mBAAI,CAACC,UAAL,GAAkBD,GAAlB;AACA,mBAAI,CAACE,kBAAL,GAA0BF,GAAG,CAAC,CAAD,CAAH,CAAOG,IAAjC;AACD,aAHD;AAID;AApCyB;AAAA;AAAA,iBAqC1B,0BAAiB;AAAA;;AACf,iBAAKpB,kBAAL,CAAwBqB,iBAAxB,GAA4CL,SAA5C,CAAsD,UAAAC,GAAG,EAAI;AAC3D,oBAAI,CAACK,iBAAL,GAAyBL,GAAzB;AACD,aAFD;AAGD;AAzCyB;AAAA;AAAA,iBA0C1B,2BAAkB;AACjB,gBAAI,KAAKb,OAAL,CAAamB,KAAjB,EAAwB;AACrB,kBAAI,CAAC,KAAKC,MAAV,EAAkB;AAChB,qBAAKxB,kBAAL,CAAwByB,MAAxB,CAA+B,KAAKrB,OAAL,CAAasB,KAA5C;AACD,eAFD,MAGK;AACH,qBAAK1B,kBAAL,CAAwB2B,iBAAxB,CAA0C,KAAKvB,OAAL,CAAasB,KAAvD;AACD;;AACD,mBAAKtB,OAAL,CAAawB,KAAb;AACA,mBAAKJ,MAAL,GAAc,IAAd;AACA,mBAAKK,YAAL;AACD,aAVF,MAWM;AACH,mBAAKC,UAAL;AACD;AACF;AAzDyB;AAAA;AAAA,iBA0D1B,cAAKC,IAAL,EAAwBC,WAAxB,EAAqD;AACnD,iBAAKC,QAAL,GAAgB,IAAhB;AACA,iBAAKT,MAAL,GAAcO,IAAI,CAACG,EAAnB;AACA,iBAAK9B,OAAL,CAAa+B,GAAb,CAAiB,QAAjB,EAA2BC,QAA3B,CAAoCL,IAAI,CAACP,MAAzC;AACA,iBAAKpB,OAAL,CAAa+B,GAAb,CAAiB,aAAjB,EAAgCC,QAAhC,CAAyCL,IAAI,CAACM,eAA9C;AACA,iBAAKjC,OAAL,CAAa+B,GAAb,CAAiB,oBAAjB,EAAuCC,QAAvC,CAAgDL,IAAI,CAACO,sBAArD;AACA,iBAAKlC,OAAL,CAAa+B,GAAb,CAAiB,KAAjB,EAAwBC,QAAxB,CAAiCL,IAAI,CAACrB,GAAtC;AACAsB,uBAAW,CAACO,KAAZ;AACD;AAlEyB;AAAA;AAAA,iBAmE1B,iBAAOR,IAAP,EAA0BC,WAA1B,EAAuD;AACrD,iBAAKQ,mBAAL,CAAyBT,IAAzB;AACAC,uBAAW,CAACO,KAAZ;AACD;AAtEyB;AAAA;AAAA,iBAuEpB,6BAAoBR,IAApB,EAAuC;;;;;;;;;;AAC7B,6BAAM,KAAK7B,eAAL,CAAqBuB,MAArB,CAA4B;AAC9CgB,8BAAM,EAAE,UADsC;AAE9CC,+BAAO,EAAE,gDAFqC;AAG9CC,+BAAO,EAAE,CACP;AACEC,8BAAI,EAAE,QADR;AAEEC,8BAAI,EAAE,QAFR;AAGEC,kCAAQ,EAAE,WAHZ;AAIEC,iCAAO,EAAE,iBAACC,IAAD,EAAU;AACjBC,mCAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AANH,yBADO,EAQJ;AACDN,8BAAI,EAAE,IADL;AAEDG,iCAAO,EAAE,mBAAM;AACb,kCAAI,CAAC/C,kBAAL,CAAwBmD,iBAAxB,CAA0CpB,IAAI,CAACG,EAA/C;;AACA,kCAAI,CAAC9B,OAAL,CAAawB,KAAb;;AACA,kCAAI,CAACJ,MAAL,GAAc,IAAd;AACD;AANA,yBARI;AAHqC,uBAA5B,CAAN;;;AAAR4B,2B;;AAqBN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AA9FyB;AAAA;AAAA,iBA+FpB,sBAAa;;;;;;;;AACH,6BAAM,KAAKnD,eAAL,CAAqBuB,MAArB,CAA4B;AAC9CqB,gCAAQ,EAAE,iBADoC;AAE9CL,8BAAM,EAAE,OAFsC;AAG9C;AACAC,+BAAO,EAAE,yBAJqC;AAK9CC,+BAAO,EAAE,CAAC,IAAD;AALqC,uBAA5B,CAAN;;;AAARS,2B;;AAQN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AAzGyB;AAAA;AAAA,iBA0GpB,wBAAe;;;;;;;;AACL,6BAAM,KAAKnD,eAAL,CAAqBuB,MAArB,CAA4B;AAC9CqB,gCAAQ,EAAE,iBADoC;AAE9CL,8BAAM,EAAE,OAFsC;AAG9C;AACAC,+BAAO,EAAE,0BAJqC;AAK9CC,+BAAO,EAAE,CAAC,IAAD;AALqC,uBAA5B,CAAN;;;AAARS,2B;;AAQN,6BAAMA,KAAK,CAACC,OAAN,EAAN;;;;;;;;;AACD;AApHyB;;AAAA;AAAA,S;;;;gBAXnB;;gBAGA;;gBACA;;gBAHA;;gBAAiC;;;;AAU7BvD,qBAAe,6DAL3B,gEAAU;AACTwD,gBAAQ,EAAE,kBADD;AAETC,gBAAQ,EAAR,0EAFS;;AAAA,OAAV,CAK2B,GAAfzD,eAAe,CAAf;;;;;;;;;;;;;;;;ACZb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoBF0D,qBAAqB;AAAA;AAAA,O;;AAArBA,2BAAqB,6DAVjC,+DAAS;AACRC,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,yFAJO,EAKP,kEALO,CADD;AAQRC,oBAAY,EAAE,CAAC,kEAAD;AARN,OAAT,CAUiC,GAArBF,qBAAqB,CAArB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPAG,kBAAkB;AAE7B,oCAAqBC,IAArB,EAAuC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AADZ,eAAAC,MAAA,GAAS,4BAAT;AAER;;AAH4B;AAAA;AAAA,iBAI7B,gBAAOC,GAAP,EAAiB;AACf,mBAAO,KAAKF,IAAL,CAAUG,IAAV,CAAe,KAAKF,MAAL,GAAc,cAA7B,EAA6CC,GAA7C,CAAP;AACD;AAN4B;AAAA;AAAA,iBAO7B,6BAAiB;AACf,mBAAO,KAAKF,IAAL,CAAUzB,GAAV,CAAmB,KAAK0B,MAAL,GAAc,cAAjC,CAAP;AACD;AAT4B;AAAA;AAAA,iBAU7B,2BAAkBC,GAAlB,EAA4B;AAC1B,mBAAO,KAAKF,IAAL,CAAUI,GAAV,CAAc,KAAKH,MAAL,GAAc,eAA5B,EAA6CC,GAA7C,CAAP;AACD;AAZ4B;AAAA;AAAA,iBAa7B,2BAAkB5B,EAAlB,EAAsB;AACpB,mBAAO,KAAK0B,IAAL,WAAiB,KAAKC,MAAL,GAAc,eAAd,GAAgC3B,EAAjD,EAAqD+B,SAArD,EAAP;AACD;AAf4B;AAAA;AAAA,iBAgBrB,qBAAYC,KAAZ,EAA6B;AACnC,gBAAIA,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;AACxB,qBAAO,yDAAiB,IAAI,0DAAJ,CAAaD,KAAK,CAACE,IAAN,EAAb,CAAjB,CAAP;AACD;;AAED,gBAAIF,KAAK,CAACC,MAAN,KAAiB,GAArB,EAA0B;AACxB,qBAAO,yDAAiB,IAAI,qEAAJ,EAAjB,CAAP;AACD;;AAED,mBAAO,yDAAiB,IAAI,0DAAJ,CAAaD,KAAb,CAAjB,CAAP;AACD;AA1B4B;;AAAA;AAAA,S;;;;gBAbtB;;;;AAaIP,wBAAkB,6DAH9B,iEAAW;AACVU,kBAAU,EAAE;AADF,OAAX,CAG8B,GAAlBV,kBAAkB,CAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb,UAAMW,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAWaC,4BAA4B;AAAA;AAAA,O;;AAA5BA,kCAA4B,6DAJxC,+DAAS;AACRhB,eAAO,EAAE,CAAC,6DAAaiB,QAAb,CAAsBJ,MAAtB,CAAD,CADD;AAERK,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIwC,GAA5BF,4BAA4B,CAA5B","file":"food-content-food-content-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, IonItemSliding, Platform } from '@ionic/angular';\nimport { Food, FoodContent } from 'src/Table/table';\nimport { FoodContentService } from '../Service/food-content.service';\nimport { FoodService } from '../Service/food.service';\n\n@Component({\n  selector: 'app-food-content',\n  templateUrl: './food-content.page.html',\n  styleUrls: ['./food-content.page.scss'],\n})\nexport class FoodContentPage implements OnInit {\n\n  regform = this.fb.group({});\n  foodId: number;\n  listOfFoodContent: FoodContent[];\n  editMode: boolean;\n  base64textString: string;\n  listOfFood: Food[];\n  defualtFoodContent: string;\n  usePicker: boolean;\n  constructor(private fb: FormBuilder,\n    private foodContentService: FoodContentService,\n    private foodService:FoodService,\n    private alertController: AlertController,\n    private platform:Platform) { }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      FoodId: [\"\"],\n      ContentName: [\"\", Validators.required],\n      ContentDescription: [\"\", Validators.required],\n      qty: [\"\", Validators.required],\n    });\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n    this.platform.is('desktop')\n  ) {\n    this.usePicker = true;\n  }\n    this.getFoodContent();\n    this.getFood()\n  }\n  getFood(){\n    this.foodService.getAllFood().subscribe(res=>{\n      this.listOfFood = res;\n      this.defualtFoodContent = res[0].Name\n    })\n  }\n  getFoodContent() {\n    this.foodContentService.getAllFoodContent().subscribe(res => {\n      this.listOfFoodContent = res;\n    })\n  }\n  saveFoodContent() {\n   if (this.regform.valid) {\n      if (!this.foodId) {\n        this.foodContentService.create(this.regform.value);\n      }\n      else {\n        this.foodContentService.updateFoodContent(this.regform.value)\n      }\n      this.regform.reset();\n      this.foodId = null;\n      this.presentAlert();\n    }\n    else {\n      this.ErrorAlert();\n    }\n  }\n  edit(food: FoodContent, slidingItem: IonItemSliding) {\n    this.editMode = true;\n    this.foodId = food.id;\n    this.regform.get('FoodId').setValue(food.foodId);\n    this.regform.get('ContentName').setValue(food.foodContentName);\n    this.regform.get('ContentDescription').setValue(food.foodContentDescription);\n    this.regform.get('qty').setValue(food.qty);\n    slidingItem.close();\n  }\n  delete(food: FoodContent, slidingItem: IonItemSliding) {\n    this.presentAlertConfirm(food);\n    slidingItem.close();\n  }\n  async presentAlertConfirm(food: FoodContent) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: '<strong>Are you sure you want delete?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.foodContentService.removeFoodContent(food.id);\n            this.regform.reset();\n            this.foodId = null;\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n  async ErrorAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      // subHeader: 'Subtitle',\n      message: 'Please Enter All field.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Food ',\n      // subHeader: 'Subtitle',\n      message: 'Food Saved successfully.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n\n}\n","export default \".label-class {\\n  --inner-padding-start:12px;\\n  --inner-padding-end:10px;\\n  margin-left: 67px;\\n}\\n\\n.label-class-al {\\n  margin-left: 67px;\\n}\\n\\n.ion-input {\\n  margin-left: 67px;\\n}\\n\\n.dx-lookup-field {\\n  padding: 5px 23px 12px 54px;\\n  font-size: 1em;\\n}\\n\\nion-content ion-item {\\n  padding: 0;\\n  --border-radius: 14px;\\n}\\n\\nion-content ion-searchbar {\\n  --border-radius: 14px;\\n  --background: rgb(243, 243, 243);\\n  margin-top: -13px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGZvb2QtY29udGVudC5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSwwQkFBc0I7RUFDdEIsd0JBQW9CO0VBQ3BCLGlCQUFpQjtBQUFyQjs7QUFFRTtFQUNFLGlCQUFpQjtBQUNyQjs7QUFDRTtFQUNFLGlCQUFpQjtBQUVyQjs7QUFBRTtFQUNFLDJCQUEyQjtFQUMzQixjQUFjO0FBR2xCOztBQURFO0VBS00sVUFBVTtFQUVWLHFCQUFnQjtBQUR4Qjs7QUFORTtFQVlFLHFCQUFnQjtFQUNoQixnQ0FBYTtFQUNiLGlCQUFpQjtBQUZyQiIsImZpbGUiOiJmb29kLWNvbnRlbnQucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbi5sYWJlbC1jbGFzc3tcclxuICAgIC0taW5uZXItcGFkZGluZy1zdGFydDoxMnB4O1xyXG4gICAgLS1pbm5lci1wYWRkaW5nLWVuZDoxMHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDY3cHg7XHJcbiAgfVxyXG4gIC5sYWJlbC1jbGFzcy1hbHtcclxuICAgIG1hcmdpbi1sZWZ0OiA2N3B4O1xyXG4gIH1cclxuICAuaW9uLWlucHV0e1xyXG4gICAgbWFyZ2luLWxlZnQ6IDY3cHg7XHJcbiAgfVxyXG4gIC5keC1sb29rdXAtZmllbGQge1xyXG4gICAgcGFkZGluZzogNXB4IDIzcHggMTJweCA1NHB4O1xyXG4gICAgZm9udC1zaXplOiAxZW07XHJcbiAgfVxyXG4gIGlvbi1jb250ZW50IHtcclxuICAgIC8vLS1iYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsIHJnYmEoNDMsOTAsMTQ4LDEpIDAlLCByZ2JhKDQ1LDExMiwyMjksMSkgMzUlLCByZ2JhKDQ1LDExMiwyMjksMSkgMTAwJSk7XHJcbiAgIFxyXG4gICAgICBpb24taXRlbSB7XHJcbiAgICAgIC8vIC0tYmFja2dyb3VuZDogcmdiKDEyMCwgMTI2LCAxMzQpO1xyXG4gICAgICAgIHBhZGRpbmc6IDA7XHJcbiAgICAgICAvLyBtYXJnaW46IDE0cHggMDtcclxuICAgICAgICAtLWJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgICAgICAvLyBjb2xvcjogI0ZGRkZGRjtcclxuICAgICAgICAvL2ZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgIH1cclxuICAgaW9uLXNlYXJjaGJhcntcclxuICAgIC0tYm9yZGVyLXJhZGl1czogMTRweDtcclxuICAgIC0tYmFja2dyb3VuZDogcmdiKDI0MywgMjQzLCAyNDMpO1xyXG4gICAgbWFyZ2luLXRvcDogLTEzcHg7XHJcbiAgIH1cclxuICB9Il19 */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Food</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n       <ion-label>Food Id </ion-label>\\n       <ion-select interface=\\\"popover\\\" formControlName=\\\"FoodId\\\" [(ngModel)]=\\\"defualtFoodContent\\\">\\n        <ion-select-option   *ngFor=\\\"let code of listOfFood\\\" value=\\\"{{code?.id}}\\\">\\n          {{code?.Name}}\\n        </ion-select-option>\\n      </ion-select>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('FoodId').valid && regform.get('FoodId').touched\\\" > This field is required! </small> \\n     </ion-item>\\n     <ion-item>\\n       <ion-label>Content Name</ion-label>\\n       <ion-input formControlName=\\\"ContentName\\\" type=\\\"text\\\"></ion-input>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('ContentName').valid && regform.get('ContentName').touched\\\" > This field is required! </small> \\n     </ion-item>\\n      <ion-item>\\n       <ion-label>Content Description</ion-label>\\n       <ion-input formControlName=\\\"ContentDescription\\\" type=\\\"text\\\"></ion-input>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('ContentDescription').valid && regform.get('ContentDescription').touched\\\" > This field is required! </small> \\n     </ion-item>\\n     <ion-item>\\n      <ion-label>Quantity</ion-label>\\n      <ion-input formControlName=\\\"qty\\\" type=\\\"number\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('qty').valid && regform.get('qty').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    \\n    <div style=\\\"text-align: center; margin: auto;\\\">\\n       <ion-button id=\\\"add items\\\" (click)=\\\"saveFoodContent()\\\"> \\n         <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n         {{editMode?'Update Food Content':'Add Food Content'}}</ion-button>\\n     </div> \\n </form>\\n\\n <ion-item-sliding  *ngFor=\\\"let item of listOfFoodContent \\\" #slidingItem >\\n  <ion-item detail>\\n    <ion-label>{{item.ContentName}}</ion-label>\\n    <ion-label> {{item.Name}}</ion-label>\\n    <ion-label> {{item.qty}}</ion-label>\\n    <ion-label> {{item.ContentDescription}}</ion-label>\\n  </ion-item>\\n  <ion-item-options side=\\\"start\\\">\\n    <ion-item-option color=\\\"danger\\\" (click)=\\\"edit(item,slidingItem)\\\">\\n   <ion-icon  name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n   <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item,slidingItem)\\\">\\n    <ion-icon  name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n  </ion-item-options>\\n</ion-item-sliding>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { FoodContentPageRoutingModule } from './food-content-routing.module';\n\nimport { FoodContentPage } from './food-content.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    FoodContentPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [FoodContentPage]\n})\nexport class FoodContentPageModule {}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AngularFirestoreCollection, AngularFirestore } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { FoodContent } from 'src/Table/table';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodContentService {\n  readonly APIURL = 'http://localhost:49347/api';\n  constructor( private http: HttpClient) {\n  }\n  create(val: any) {\n    return this.http.post(this.APIURL + '/FoodContent', val);\n  }\n  getAllFoodContent(): Observable<any[]> {\n    return this.http.get<any>(this.APIURL + '/FoodContent');\n  }\n  updateFoodContent(val: any) {\n    return this.http.put(this.APIURL + '/FoodContent/', val);\n  }\n  removeFoodContent(id) {\n    return this.http.delete(this.APIURL + '/FoodContent/' + id).toPromise();\n  }\n  private handleError(error: Response) {\n    if (error.status === 400) {\n      return Observable.throw(new BadInput(error.json()));\n    }\n\n    if (error.status === 404) {\n      return Observable.throw(new NotFoundError());\n    }\n\n    return Observable.throw(new AppError(error));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { FoodContentPage } from './food-content.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: FoodContentPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class FoodContentPageRoutingModule {}\n"]}