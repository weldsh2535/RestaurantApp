{"version":3,"sources":["./src/app/Service/restaurant.service.ts","./src/app/cart-modal/cart-modal.page.html","./src/app/cart-modal/cart-modal.page.scss","./src/app/cart-modal/cart-modal.page.ts"],"names":[],"mappings":"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","file":"default~cart-modal-cart-modal-module~details-details-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject,Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Restaurant } from 'src/Table/table';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { AppError } from '../common/app-error';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n \n  private restaurantCollectionList: AngularFirestoreCollection<any>;\n  private restaurantList: Observable<any[]>;\n  constructor(private db: AngularFirestore) {\n    this.restaurantCollectionList = db.collection<Restaurant>('Restaurant');\n  }\n  create(restaurantObj) { \n    return this.restaurantCollectionList.add(restaurantObj)\n  }\n  getAllRestaurant() {\n    this.restaurantList = this.restaurantCollectionList.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n    return this.restaurantList;\n  }\n  getRestaurant(id) {\n    return this.restaurantCollectionList.doc<any>(id).valueChanges();\n  }\n  updateRestaurant(restaurantObj: Restaurant, id: string) {\n    return this.restaurantCollectionList.doc(id).update(restaurantObj)\n    .catch(this.handleError);\n  }\n  removeRestaurant(id) {\n    return this.restaurantCollectionList.doc(id).delete()\n    .catch(this.handleError);\n  }\n  private handleError(error: Response) {\n    if (error.status === 400)\n      return Observable.throw(new BadInput(error.json()));\n  \n    if (error.status === 404)\n      return Observable.throw(new NotFoundError());\n    \n    return Observable.throw(new AppError(error));\n  }\n}\n","export default \"<ion-header>\\n  <ion-toolbar color=\\\"light\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button fill=\\\"solid\\\" shape=\\\"round\\\" color=\\\"light\\\" (click)=\\\"onclick()\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title style=\\\"text-align: center;\\\">Order Details</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button  >\\n        <ion-badge *ngIf=\\\"cart.length > 0\\\">{{ cartItemCount | async }}</ion-badge>\\n        <ion-icon slot=\\\"icon-only\\\" class=\\\"cart-icon\\\" name=\\\"cart\\\"></ion-icon>\\n      </ion-button> \\n    </ion-buttons>\\n   </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen>\\n  <!-- <div class=\\\"ion-text-end\\\">\\n    <ion-button (click)=\\\"close()\\\" fill=\\\"clear\\\" color=\\\"dark\\\">\\n      <ion-icon name=\\\"close\\\" slot=\\\"start\\\"></ion-icon>\\n    </ion-button>\\n  </div> -->\\n  <div class=\\\"ion-padding\\\">\\n    <ion-list>\\n      <ion-item *ngFor=\\\"let p of cart\\\" class=\\\"ion-text-wrap\\\">\\n        <ion-grid>\\n          <ion-row class=\\\"ion-align-items-center\\\">\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"decreaseCartItem(p)\\\">\\n                <ion-icon name=\\\"remove-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"1\\\" class=\\\"ion-align-self-center\\\">\\n              {{ p.amount }}\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" class=\\\"ion-align-self-center\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"increaseCartItem(p)\\\">\\n                <ion-icon name=\\\"add-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n            <ion-col size=\\\"2\\\" offset=\\\"5\\\">\\n              <ion-button color=\\\"medium\\\" fill=\\\"clear\\\" (click)=\\\"removeCartItem(p)\\\">\\n                <ion-icon name=\\\"close-circle\\\" slot=\\\"icon-only\\\"></ion-icon>\\n              </ion-button>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row>\\n            <ion-col size=\\\"5\\\">\\n              <b>{{ p.Name }}</b>\\n            </ion-col>\\n            <ion-col size=\\\"4\\\">\\n              <b>{{ p.Price | currency:'ETB'}}</b>\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ p.amount * p.Price | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-item>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n             Sub Total:\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ getTotal() | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n      <ion-item>\\n        <ion-grid>\\n          <ion-row>\\n            <ion-col size=\\\"9\\\">\\n             Grand Total:\\n            </ion-col>\\n            <ion-col size=\\\"3\\\" class=\\\"ion-text-end\\\">\\n              {{ getGrandTotal() | currency:'ETB' }}\\n            </ion-col>\\n          </ion-row>\\n        </ion-grid>\\n      </ion-item>\\n    </ion-list>\\n    <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n      <ion-label>Transation Type</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"transactionType\\\">\\n        <ion-select-option value=\\\"Delivery\\\">Delivery</ion-select-option>\\n        <ion-select-option value=\\\"Pickup\\\">Pickup</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery Date</ion-label>\\n      <ion-datetime formControlName=\\\"DeliveryDate\\\" display-format=\\\"MMM DD, YYYY HH:mm:ss\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [(ngModel)]=\\\"currentDate\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery fee</ion-label>\\n      <ion-input formControlName=\\\"DeliveryFee\\\" type=\\\"number\\\" (keyup)=\\\"getGrandTotal()\\\"></ion-input>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Delivery Time</ion-label>\\n      <ion-datetime formControlName=\\\"DeliveryTime\\\" display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\n    </ion-item>\\n    <ion-item>\\n      <ion-grid>\\n        <ion-row>\\n          <ion-col size=\\\"1\\\">\\n            <ion-label>\\n              <ion-icon style=\\\"height: 27px;\\n              width: 19px;\\\" name=\\\"location-outline\\\"></ion-icon>\\n            </ion-label>\\n           </ion-col>\\n          <ion-col size=\\\"8\\\">\\n           <ion-label>\\n             <p>Delivery to current Address</p>\\n             <p></p>\\n           </ion-label>\\n          </ion-col>\\n          <ion-col size=\\\"3\\\">\\n            <ion-button (click)=\\\"location()\\\">\\n              change\\n            </ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </ion-item>\\n    <ion-button expand=\\\"full\\\" (click)=\\\"order(cart)\\\" slot=\\\"fixed\\\">\\n      Order\\n    </ion-button>\\n   \\n  </form>\\n  </div>\\n</ion-content>\";","export default \"ion-badge {\\n  color: #fff;\\n  position: absolute;\\n  top: -9px;\\n  right: 2px;\\n  border-radius: 100%;\\n}\\n\\n.cart-icon {\\n  font-size: 50px;\\n}\\n\\n.cart-length {\\n  color: var(--ion-color-primary);\\n  position: absolute;\\n  top: 18px;\\n  left: 25px;\\n  font-weight: 600;\\n  font-size: 1em;\\n  min-width: 25px;\\n  z-index: 10;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGNhcnQtbW9kYWwucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksV0FBQTtFQUNBLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxtQkFBQTtBQUNKOztBQUVBO0VBQ0UsZUFBQTtBQUNGOztBQUVBO0VBQ0UsK0JBQUE7RUFDQSxrQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0VBQ0EsZUFBQTtFQUNBLFdBQUE7QUFDRiIsImZpbGUiOiJjYXJ0LW1vZGFsLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1iYWRnZSB7XHJcbiAgICBjb2xvcjogI2ZmZjtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHRvcDogLTlweDtcclxuICAgIHJpZ2h0OiAycHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMDAlO1xyXG59XHJcbiBcclxuLmNhcnQtaWNvbiB7XHJcbiAgZm9udC1zaXplOiA1MHB4O1xyXG59XHJcbiBcclxuLmNhcnQtbGVuZ3RoIHtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDE4cHg7XHJcbiAgbGVmdDogMjVweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGZvbnQtc2l6ZTogMWVtO1xyXG4gIG1pbi13aWR0aDogMjVweDtcclxuICB6LWluZGV4OiAxMDtcclxufVxyXG4iXX0= */\";","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, ModalController } from '@ionic/angular';\nimport { BehaviorSubject } from 'rxjs';\nimport { Food, Restaurant } from 'src/Table/table';\nimport { FoodService } from '../Service/food.service';\nimport { OrderDetailService } from '../Service/order-detail.service';\nimport { OrderService } from '../Service/order.service';\nimport { RestaurantService } from '../Service/restaurant.service';\nimport { SharedService } from '../Service/shared.service';\n\n@Component({\n  selector: 'app-cart-modal',\n  templateUrl: './cart-modal.page.html',\n  styleUrls: ['./cart-modal.page.scss'],\n})\nexport class CartModalPage implements OnInit {\n  cart: any[] = [];\n  cartItemCount: BehaviorSubject<number>;\n  id: any;\n  regform = this.fb.group({});\n  currentDate = new Date().toUTCString();\n  minDate = new Date().toISOString();\n  maxDate = new Date().toISOString();\n  listOfRestaurant: Restaurant[];\n  orderId: any;\n  x: number;\n  listOfFood: Food[];\n  orderNo: number;\n  restaurantId: any;\n  Total: number;\n  status: any;\n  statusRestaurant: { id: number; val: string; isChecked: boolean; }[];\n  statusDriver: { id: number; val: string; checked: boolean; }[];\n  constructor(private modalCtrl: ModalController,\n    private alertCtrl: AlertController,\n    private orderService: OrderService,\n    private fb: FormBuilder,\n    private router: Router,\n    private restaurantService: RestaurantService,\n    private orderDetailService: OrderDetailService,\n    private foodService: FoodService,\n    private sharedService:SharedService) { \n      this.statusDriver = [\n        { id: 0, val: 'picked', checked: false },\n        { id: 1, val: 'start moving', checked: false },\n        { id: 2, val: 'delivered', checked: false }\n      ];\n      this.statusRestaurant = [\n         { id: 0, val: 'order received', isChecked: true },\n         { id: 1, val: 'start cooking', isChecked: false },\n         { id: 2, val: 'cooked', isChecked: false },\n         { id: 3, val: 'ready to service', isChecked: false }\n       ];\n    }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      transactionType: [\"\"],\n      DeliveryDate: [\"\"],\n      DeliveryTime: [\"\"],\n      DeliveryAddress: [\"\"],\n      DeliveryFee: [\"\"]\n    })\n    //setting min date\n    let date: Date = new Date();\n    date.setDate(date.getDate() - 5);\n    this.minDate = date.toISOString();\n    //setting max date\n    date = new Date();\n    date.setDate(date.getDate() + 5);\n    this.maxDate = date.toISOString();\n    ///to get data form service\n    this.cart = this.orderService.getCart();\n    this.cartItemCount = this.orderService.getCartItemCount();\n    this.id = this.orderService.getRestaurantId().value;\n    //console.log(this.id)\n    this.getRestaurant();\n    this.getFood();\n    this.readNOId();\n  }\n  getRestaurant() {\n    this.restaurantService.getAllRestaurant().subscribe(res => {\n      this.listOfRestaurant = res;\n    })\n  }\n  getFood() {\n    this.foodService.getAllFood().subscribe(res => {\n      this.listOfFood = res;\n    })\n  }\n  readNOId() {\n    let No = 0;\n    this.orderService.getAllOrder().subscribe((result) => {\n      if (result.length == 0) No = 1;\n      else No = result.length + 1;\n      this.orderNo = + No;\n    });\n  }\n  decreaseCartItem(product) {\n    this.orderService.decreaseProduct(product);\n  }\n\n  increaseCartItem(product) {\n    this.orderService.addProduct(product);\n  }\n\n  removeCartItem(product) {\n    //this.orderService.removeProduct(product);\n    this.presentAlertConfirm(product);\n  }\n\n  getTotal() {\n    return this.cart.reduce((i, j) => i + j.amount * j.Price, 0);\n  }\n  \n  getGrandTotal(){\n    return this.getTotal()+this.regform.get(\"DeliveryFee\").value;\n  }\n  close() {\n    this.modalCtrl.dismiss();\n  }\n  location(){\n    this.sharedService.status.next(\"cart-modal\");\n    this.router.navigate([\"/menu/location\"]); \n  }\n  order(cart) {\n    this.Total = 0;\n    cart.forEach(element => {\n      this.restaurantId = element.restaurantId\n      this.Total = this.Total + (element.Price * element.amount)\n      let orderDetails = {\n        OrderId: this.orderNo,\n        Food: element.id,\n        Qty: element.amount,\n        Price: element.Price\n      }\n      this.orderDetailService.create(orderDetails);\n    });\n    let res = this.listOfRestaurant.find(c => c.accountId == this.restaurantId)\n    let order = {\n      RestaurantId: this.restaurantId,\n      DateTime: this.regform.get('DeliveryDate').value,\n      Customer: localStorage.getItem(\"userId\"),\n      Location: res.Location,//to insert loging user (customer) of location\n      OrderStatus:this.statusDriver,\n      Total: this.getGrandTotal(),\n      orderNo: this.orderNo,\n      Driver: \"\",\n      Vehicle: \"\",\n      orderLocation: \"\", //or droupLocation\n      restaurantStatus:this.statusRestaurant\n    }\n    this.orderService.create(order);\n    this.presentAlert(\"Add order succesfuly\");\n    this.router.navigate([\"/menu/order\"]);\n  }\n  async presentAlert(message) {\n\t\tconst alert = await this.alertCtrl.create({\n\t\t\tcssClass: 'my-custom-class',\n\t\t\theader: 'Order',\n\t\t\t// subHeader: 'Subtitle',\n\t\t\tmessage: message,\n\t\t\tbuttons: ['OK']\n\t\t});\n\t\tawait alert.present();\n\t}\n  async presentAlertConfirm(product) {\n    const alert = await this.alertCtrl.create({\n      header: 'Clear cart !',\n      message: '<strong>Are you sure you want to remove all items in your cart ?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.orderService.removeProduct(product);\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n  onclick() {\n    this.id = this.orderService.getRestaurantId().value;\n    this.router.navigate([\"/menu/details/\" + this.id]);\n  }\n}\n"],"sourceRoot":"webpack:///"}