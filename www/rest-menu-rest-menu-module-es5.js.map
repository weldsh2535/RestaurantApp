{"version":3,"sources":["webpack:///src/app/Service/restaurant.service.ts","webpack:///src/app/rest-menu/rest-menu.page.html","webpack:///src/app/rest-menu/rest-menu.module.ts","webpack:///src/app/rest-menu/rest-menu.page.ts","webpack:///src/app/Service/rest-menu.service.ts","webpack:///src/app/rest-menu/rest-menu-routing.module.ts","webpack:///src/app/rest-menu/rest-menu.page.scss"],"names":["RestaurantService","db","restaurantCollectionList","collection","restaurantObj","add","restaurantList","snapshotChanges","pipe","actions","map","a","data","payload","doc","id","valueChanges","update","handleError","error","status","json","providedIn","RestMenuPageModule","imports","declarations","RestMenuPage","fb","restMenuService","restaurantService","alertController","platform","regform","group","RestaurantId","Name","Price","CookingTime","DeliveryTime","Avaliable","Favourite","is","usePicker","getRestaurant","getRestMenu","getAllRestMenu","subscribe","res","listOfRestMenu","getAllRestaurant","listOfRestaurant","defalutRestaurantId","valid","restMenuId","create","value","updateRestMenu","reset","presentAlert","ErrorAlert","restMenu","slide","editMode","get","setValue","close","presentAlertConfirm","header","message","buttons","text","role","cssClass","handler","blah","console","log","removeRestMenu","alert","present","selector","template","RestMenuService","restMenuCollectionList","restMenuObj","restMenuList","routes","path","component","RestMenuPageRoutingModule","forChild","exports"],"mappings":"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","file":"rest-menu-rest-menu-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject,Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { AngularFirestore, AngularFirestoreCollection } from 'angularfire2/firestore';\nimport { Restaurant } from 'src/Table/table';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\nimport { AppError } from '../common/app-error';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestaurantService {\n \n  private restaurantCollectionList: AngularFirestoreCollection<any>;\n  private restaurantList: Observable<any[]>;\n  constructor(private db: AngularFirestore) {\n    this.restaurantCollectionList = db.collection<Restaurant>('Restaurant');\n  }\n  create(restaurantObj) { \n    return this.restaurantCollectionList.add(restaurantObj)\n  }\n  getAllRestaurant() {\n    this.restaurantList = this.restaurantCollectionList.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n    return this.restaurantList;\n  }\n  getRestaurant(id) {\n    return this.restaurantCollectionList.doc<any>(id).valueChanges();\n  }\n  updateRestaurant(restaurantObj: Restaurant, id: string) {\n    return this.restaurantCollectionList.doc(id).update(restaurantObj)\n    .catch(this.handleError);\n  }\n  removeRestaurant(id) {\n    return this.restaurantCollectionList.doc(id).delete()\n    .catch(this.handleError);\n  }\n  private handleError(error: Response) {\n    if (error.status === 400)\n      return Observable.throw(new BadInput(error.json()));\n  \n    if (error.status === 404)\n      return Observable.throw(new NotFoundError());\n    \n    return Observable.throw(new AppError(error));\n  }\n}\n","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>RestMenu</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n       <ion-label>Restaurant Id </ion-label>\\n       <ion-select interface=\\\"popover\\\" formControlName=\\\"RestaurantId\\\" [(ngModel)]=\\\"defalutRestaurantId\\\">\\n        <ion-select-option   *ngFor=\\\"let code of listOfRestaurant\\\" value=\\\"{{code?.id}}\\\">\\n          {{code?.Name}}\\n        </ion-select-option>\\n      </ion-select>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('RestaurantId').valid && regform.get('RestaurantId').touched\\\" > This field is required! </small> \\n     </ion-item>\\n     <ion-item>\\n       <ion-label>Name</ion-label>\\n       <ion-input formControlName=\\\"Name\\\" type=\\\"text\\\"></ion-input>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('Name').valid && regform.get('Name').touched\\\" > This field is required! </small> \\n     </ion-item>\\n      <ion-item>\\n       <ion-label>Price</ion-label>\\n       <ion-input formControlName=\\\"Price\\\" type=\\\"number\\\"></ion-input>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('Price').valid && regform.get('Price').touched\\\" > This field is required! </small> \\n     </ion-item>\\n     <ion-item>\\n       <ion-label>Cooking Time</ion-label>\\n       <ion-datetime formControlName=\\\"CookingTime\\\" display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\n       <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('CookingTime').valid && regform.get('CookingTime').touched\\\" > This field is required! </small> \\n     </ion-item>\\n     <ion-item>\\n      <ion-label>Delivery Time</ion-label>\\n      <ion-datetime formControlName=\\\"DeliveryTime\\\" display-format=\\\"h:mm A\\\" picker-format=\\\"h:mm A\\\" value=\\\"1990-02-19T07:43Z\\\"></ion-datetime>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('DeliveryTime').valid && regform.get('DeliveryTime').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Avaliable</ion-label>\\n      <ion-toggle slot=\\\"end\\\" formControlName=\\\"Avaliable\\\" checked></ion-toggle>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('Avaliable').valid && regform.get('Avaliable').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Favourite</ion-label>\\n      <ion-toggle slot=\\\"end\\\" formControlName=\\\"Favourite\\\"  checked></ion-toggle>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('Favourite').valid && regform.get('Favourite').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <div style=\\\"text-align: center; margin: auto;\\\">\\n      <ion-button id=\\\"add items\\\" (click)=\\\"saveRestaurant()\\\"> \\n        <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n        {{editMode?'Update Rest Menu':'Add Rest Menu'}}</ion-button>\\n    </div> \\n </form>\\n <ion-item-sliding *ngFor=\\\"let item of listOfRestMenu \\\" #slidingItem >\\n  <ion-item detail>\\n    <ion-label>{{item.Name}}</ion-label>\\n    <ion-label>{{item.Price}}</ion-label>\\n    <ion-label>{{item.CookingTime}}</ion-label>\\n    <ion-label>{{item.DeliveryTime}} </ion-label>\\n  </ion-item>\\n  <ion-item-options side=\\\"start\\\">\\n    <ion-item-option color=\\\"danger\\\" (click)=\\\"edit(item,slidingItem)\\\">\\n   <ion-icon  name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n   <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item,slidingItem)\\\">\\n    <ion-icon  name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n  </ion-item-options>\\n</ion-item-sliding>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RestMenuPageRoutingModule } from './rest-menu-routing.module';\n\nimport { RestMenuPage } from './rest-menu.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RestMenuPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RestMenuPage]\n})\nexport class RestMenuPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { AlertController, IonItemSliding, Platform } from '@ionic/angular';\nimport { Restaurant, RestMenu } from 'src/Table/table';\nimport { RestMenuService } from '../Service/rest-menu.service';\nimport { RestaurantService } from '../Service/restaurant.service';\n\n@Component({\n  selector: 'app-rest-menu',\n  templateUrl: './rest-menu.page.html',\n  styleUrls: ['./rest-menu.page.scss'],\n})\nexport class RestMenuPage implements OnInit {\n  regform = this.fb.group({});\n  listOfRestaurant: Restaurant[];\n  listOfRestMenu: RestMenu[];\n  defalutRestaurantId: string;\n  editMode:boolean\n  restMenuId: string;\n  usePicker: boolean;\n  constructor(private fb: FormBuilder,\n    private restMenuService: RestMenuService,\n    private restaurantService:RestaurantService,\n    private alertController:AlertController,\n    private platform:Platform ) { }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      RestaurantId: [\"\"],\n      Name: [\"\"],\n      Price: [\"\"],\n      CookingTime: [\"\"],\n      DeliveryTime: [\"\"],\n      Avaliable: [\"\"],\n      Favourite: [\"\"]\n    });\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n    this.platform.is('desktop')\n  ) {\n    this.usePicker = true;\n  }\n    this.getRestaurant();\n    this.getRestMenu();\n  }\n  getRestMenu(){\n    this.restMenuService.getAllRestMenu().subscribe(res=>{\n      this.listOfRestMenu =res;\n    })\n  }\n  getRestaurant(){\n    this.restaurantService.getAllRestaurant().subscribe(res=>{\n      this.listOfRestaurant = res;\n      this.defalutRestaurantId = res[0].Name\n    })\n  }\n\n  saveRestaurant(){\n   if(this.regform.valid){\n     if(!this.restMenuId){\n       this.restMenuService.create(this.regform.value)\n     }\n     else{\n       this.restMenuService.updateRestMenu(this.regform.value,this.restMenuId);\n     }\n     this.regform.reset();\n     this.presentAlert();\n   }\n   else{\n     this.ErrorAlert();\n   }\n  }\n  edit(restMenu:RestMenu,slide:IonItemSliding){\n    this.editMode = true;\n    this.restMenuId = restMenu.id;\n    this.regform.get('Name').setValue(restMenu.Name);\n    this.regform.get('Price').setValue(restMenu.Price);\n    this.regform.get('CookingTime').setValue(restMenu.CookingTime);\n    this.regform.get('DeliveryTime').setValue(restMenu.DeliveryTime);\n    this.regform.get('Favourite').setValue(restMenu.Favourite);\n    this.regform.get('RestaurantId').setValue(restMenu.RestaurantId);\n    this.regform.get('Avaliable').setValue(restMenu.Avaliable);\n    slide.close();\n  }\n  delete(restMenu:RestMenu,slide:IonItemSliding){\n  this.presentAlertConfirm(restMenu);\n  slide.close();\n  }\n  async presentAlertConfirm(restMenu: RestMenu) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: '<strong>Are you sure you want delete?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.restMenuService.removeRestMenu(restMenu.id);\n            this.regform.reset();\n            this.restMenuId = null;\n          }\n        }\n      ]\n    });\n    await alert.present();\n  }\n  async ErrorAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      // subHeader: 'Subtitle',\n      message: 'Please Enter All field.',\n      buttons: ['OK']\n    });\n  \n    await alert.present();\n  }\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Account',\n      // subHeader: 'Subtitle',\n      message: 'Account Saved successfully.',\n      buttons: ['OK']\n    });\n  \n    await alert.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestoreCollection, AngularFirestore } from 'angularfire2/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { RestMenu } from 'src/Table/table';\nimport { AppError } from '../common/app-error';\nimport { BadInput } from '../common/bad-input';\nimport { NotFoundError } from '../common/not-found-error';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestMenuService {\n  private restMenuCollectionList: AngularFirestoreCollection<any>;\n  private restMenuList: Observable<any[]>;\n  constructor(private db: AngularFirestore) {\n    this.restMenuCollectionList = db.collection<RestMenu>('RestMenu');\n  }\n  create(restMenuObj) { \n    return this.restMenuCollectionList.add(restMenuObj)\n  }\n  getAllRestMenu() {\n    this.restMenuList = this.restMenuCollectionList.snapshotChanges().pipe(\n      map(actions => {\n        return actions.map(a => {\n          const data = a.payload.doc.data();\n          const id = a.payload.doc.id;\n          return { id, ...data };\n        });\n      })\n    );\n    return this.restMenuList;\n  }\n  getRestMenu(id) {\n    return this.restMenuCollectionList.doc<any>(id).valueChanges();\n  }\n  updateRestMenu(restMenuObj: RestMenu, id: string) {\n    return this.restMenuCollectionList.doc(id).update(restMenuObj)\n    .catch(this.handleError);\n  }\n  removeRestMenu(id) {\n    return this.restMenuCollectionList.doc(id).delete()\n    .catch(this.handleError);\n  }\n  private handleError(error: Response) {\n    if (error.status === 400)\n      return Observable.throw(new BadInput(error.json()));\n    if (error.status === 404)\n      return Observable.throw(new NotFoundError());\n     return Observable.throw(new AppError(error));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RestMenuPage } from './rest-menu.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RestMenuPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RestMenuPageRoutingModule {}\n","export default \".label-class {\\n  --inner-padding-start:12px;\\n  --inner-padding-end:10px;\\n  margin-left: 67px;\\n}\\n\\n.label-class-al {\\n  margin-left: 67px;\\n}\\n\\n.ion-input {\\n  margin-left: 67px;\\n}\\n\\n.dx-lookup-field {\\n  padding: 5px 23px 12px 54px;\\n  font-size: 1em;\\n}\\n\\nion-content ion-item {\\n  padding: 0;\\n  --border-radius: 14px;\\n}\\n\\nion-content ion-searchbar {\\n  --border-radius: 14px;\\n  --background: rgb(243, 243, 243);\\n  margin-top: -13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXHJlc3QtbWVudS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSwwQkFBQTtFQUNBLHdCQUFBO0VBQ0EsaUJBQUE7QUFBSjs7QUFFRTtFQUNFLGlCQUFBO0FBQ0o7O0FBQ0U7RUFDRSxpQkFBQTtBQUVKOztBQUFFO0VBQ0UsMkJBQUE7RUFDQSxjQUFBO0FBR0o7O0FBRU07RUFFRSxVQUFBO0VBRUEscUJBQUE7QUFEUjs7QUFLRztFQUNDLHFCQUFBO0VBQ0EsZ0NBQUE7RUFDQSxpQkFBQTtBQUhKIiwiZmlsZSI6InJlc3QtbWVudS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmxhYmVsLWNsYXNze1xyXG4gICAgLS1pbm5lci1wYWRkaW5nLXN0YXJ0OjEycHg7XHJcbiAgICAtLWlubmVyLXBhZGRpbmctZW5kOjEwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNjdweDtcclxuICB9XHJcbiAgLmxhYmVsLWNsYXNzLWFse1xyXG4gICAgbWFyZ2luLWxlZnQ6IDY3cHg7XHJcbiAgfVxyXG4gIC5pb24taW5wdXR7XHJcbiAgICBtYXJnaW4tbGVmdDogNjdweDtcclxuICB9XHJcbiAgLmR4LWxvb2t1cC1maWVsZCB7XHJcbiAgICBwYWRkaW5nOiA1cHggMjNweCAxMnB4IDU0cHg7XHJcbiAgICBmb250LXNpemU6IDFlbTtcclxuICB9XHJcbiAgaW9uLWNvbnRlbnQge1xyXG4gICAgLy8tLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSg0Myw5MCwxNDgsMSkgMCUsIHJnYmEoNDUsMTEyLDIyOSwxKSAzNSUsIHJnYmEoNDUsMTEyLDIyOSwxKSAxMDAlKTtcclxuICAgXHJcbiAgICAgIGlvbi1pdGVtIHtcclxuICAgICAgLy8gLS1iYWNrZ3JvdW5kOiByZ2IoMTIwLCAxMjYsIDEzNCk7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgIC8vIG1hcmdpbjogMTRweCAwO1xyXG4gICAgICAgIC0tYm9yZGVyLXJhZGl1czogMTRweDtcclxuICAgICAgIC8vIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgICAgIC8vZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgfVxyXG4gICBpb24tc2VhcmNoYmFye1xyXG4gICAgLS1ib3JkZXItcmFkaXVzOiAxNHB4O1xyXG4gICAgLS1iYWNrZ3JvdW5kOiByZ2IoMjQzLCAyNDMsIDI0Myk7XHJcbiAgICBtYXJnaW4tdG9wOiAtMTNweDtcclxuICAgfVxyXG4gIH1cclxuIl19 */\";"]}