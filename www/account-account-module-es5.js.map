{"version":3,"sources":["webpack:///src/app/account/account.page.html","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account.page.ts","webpack:///src/app/account/account.page.scss","webpack:///src/app/account/account-routing.module.ts"],"names":["AccountPageModule","imports","declarations","AccountPage","fb","accountService","alertController","platform","regform","group","email","phonenumber","required","password","FullName","FirstTimeLocation","type","active","is","usePicker","getAccount","getAllAccount","subscribe","res","listOfAccount","event","get","value","filter","c","valid","accountId","create","updateAccount","reset","presentAlert","ErrorAlert","account","sliding","editMode","id","setValue","close","presentAlertConfirm","header","message","buttons","text","role","cssClass","handler","blah","console","log","removeAccount","alert","present","selector","template","routes","path","component","AccountPageRoutingModule","forChild","exports"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Account</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n      <ion-label>Full Name</ion-label>\\n      <ion-input formControlName=\\\"FullName\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('FullName').valid && regform.get('FullName').touched\\\" > This field is required! </small> \\n      </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email  </ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('email').valid && regform.get('email').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Phone number</ion-label>\\n      <ion-input formControlName=\\\"phonenumber\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('phonenumber').valid && regform.get('phonenumber').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Type</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"type\\\" (ngModelChange)=\\\"selectType($event)\\\">\\n        <ion-select-option value=\\\"driver\\\">Driver</ion-select-option>\\n        <ion-select-option value=\\\"restaurant\\\">Restaurant</ion-select-option>\\n        <ion-select-option value=\\\"customer\\\"> Customer</ion-select-option>\\n        <ion-select-option value=\\\"admin\\\">Admin</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Active</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"active\\\" (ngModelChange)=\\\"selectActive($event)\\\">\\n        <ion-select-option value=\\\"true\\\">true</ion-select-option>\\n        <ion-select-option value=\\\"false\\\">false</ion-select-option>\\n      </ion-select>\\n     </ion-item>\\n    <!-- <ion-item>\\n      <ion-label>Location On Order</ion-label>\\n      <ion-input formControlName=\\\"LocationOnOrder\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('LocationOnOrder').valid && regform.get('LocationOnOrder').touched\\\" > This field is required! </small> \\n    </ion-item> -->\\n    <ion-item>\\n      <ion-label>First Time Location</ion-label>\\n      <ion-input formControlName=\\\"FirstTimeLocation\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('FirstTimeLocation').valid && regform.get('FirstTimeLocation').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('password').valid && regform.get('password').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <div style=\\\"text-align: center; margin: auto;\\\">\\n      <ion-button id=\\\"add items\\\" (click)=\\\"SaveAccount()\\\"> \\n        <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n        {{editMode?'Update Account':'Add Account'}}</ion-button>\\n    </div>\\n</form>\\n<ion-item-sliding  *ngFor=\\\"let item of listOfAccount\\\" #slidingItem >\\n  <ion-item detail>\\n    <ion-label> {{item.FullName}}</ion-label>\\n    <ion-label> {{item.phonenumber}}</ion-label>\\n  </ion-item>\\n  <ion-item-options side=\\\"start\\\">\\n    <ion-item-option color=\\\"danger\\\" (click)=\\\"edit(item,slidingItem)\\\">\\n   <ion-icon  name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n   <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item,slidingItem)\\\">\\n    <ion-icon  name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n  </ion-item-options>\\n</ion-item-sliding>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccountPageRoutingModule } from './account-routing.module';\n\nimport { AccountPage } from './account.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountPageRoutingModule,\n   ReactiveFormsModule\n  ],\n  declarations: [AccountPage]\n})\nexport class AccountPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, IonItemSliding, Platform } from '@ionic/angular';\nimport { Account } from 'src/Table/table';\nimport { AccountService } from '../Service/account.service';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.page.html',\n  styleUrls: ['./account.page.scss'],\n})\nexport class AccountPage implements OnInit {\n  regform = this.fb.group({})\n  accountId: string;\n  editMode: boolean\n  SelectedCustomerId: string;\n  listOfAccount: Account[];\n  usePicker: boolean;\n  constructor(private fb: FormBuilder,\n    private accountService: AccountService,\n    private alertController: AlertController,\n    private platform: Platform) { }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      email: [\"\", Validators.email],\n      phonenumber: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n      FullName: [\"\", Validators.required],\n      FirstTimeLocation: [\"\"],\n      type: [\"\"],\n      active: [\"\"]\n    });\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n      this.platform.is('desktop')\n    ) {\n      this.usePicker = true;\n    }\n    this.getAccount();\n  }\n  getAccount() {\n    this.accountService.getAllAccount().subscribe(res => {\n      this.listOfAccount = res;\n    })\n  }\n  selectType(event) {\n    let active = this.regform.get(\"active\").value;\n    this.accountService.getAllAccount().subscribe(res => {\n      if (active !== \"\") {\n        this.listOfAccount = res.filter(c => c.type == event && c.active == active);\n      }\n      else {\n        this.listOfAccount = res.filter(c => c.type == event);\n      }\n    })\n  }\n  selectActive(event) {\n    let type = this.regform.get(\"type\").value;\n    this.accountService.getAllAccount().subscribe(res => {\n      if (type !== \"\") {\n        this.listOfAccount = res.filter(c => c.active == event && c.type == type);\n      }\n      else {\n        this.listOfAccount = res.filter(c => c.active == event);\n      }\n    })\n  }\n  SaveAccount() {\n    if (this.regform.valid) {\n      if (!this.accountId) {\n        this.accountService.create(this.regform.value);\n      }\n      else {\n        this.accountService.updateAccount(this.regform.value, this.accountId);\n      }\n      this.regform.reset();\n      this.presentAlert();\n      this.accountId = null;\n    }\n    else {\n      this.ErrorAlert();\n    }\n  }\n  edit(account: Account, sliding: IonItemSliding) {\n    this.editMode = true;\n    this.accountId = account.id;\n    this.regform.get('FullName').setValue(account.FullName);\n    this.regform.get('FirstTimeLocation').setValue(account.FirstTimeLocation);\n    this.regform.get('email').setValue(account.email);\n    this.regform.get('password').setValue(account.password);\n    this.regform.get('phonenumber').setValue(account.phonenumber);\n    this.regform.get('active').setValue(account.active);\n    this.regform.get('type').setValue(account.type);\n    sliding.close();\n  }\n  delete(account: Account, sliding: IonItemSliding) {\n    this.presentAlertConfirm(account);\n    sliding.close();\n  }\n  async presentAlertConfirm(account: Account) {\n    const alert = await this.alertController.create({\n      header: 'Confirm!',\n      message: '<strong>Are you sure you want delete?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.accountService.removeAccount(account.id);\n            this.regform.reset();\n            this.accountId = null;\n          }\n        }\n      ]\n    });\n\n    await alert.present();\n  }\n  async ErrorAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      // subHeader: 'Subtitle',\n      message: 'Please Enter All field.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Account',\n      // subHeader: 'Subtitle',\n      message: 'Account Saved successfully.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n}\n","export default \".label-class {\\n  --inner-padding-start:12px;\\n  --inner-padding-end:10px;\\n  margin-left: 67px;\\n}\\n\\n.label-class-al {\\n  margin-left: 67px;\\n}\\n\\n.ion-input {\\n  margin-left: 67px;\\n}\\n\\n.dx-lookup-field {\\n  padding: 5px 23px 12px 54px;\\n  font-size: 1em;\\n}\\n\\nion-content ion-item {\\n  padding: 0;\\n  --border-radius: 14px;\\n}\\n\\nion-content ion-searchbar {\\n  --border-radius: 14px;\\n  --background: rgb(243, 243, 243);\\n  margin-top: -13px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFjY291bnQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksMEJBQUE7RUFDQSx3QkFBQTtFQUNBLGlCQUFBO0FBQUo7O0FBRUU7RUFDRSxpQkFBQTtBQUNKOztBQUNFO0VBQ0UsaUJBQUE7QUFFSjs7QUFBRTtFQUNFLDJCQUFBO0VBQ0EsY0FBQTtBQUdKOztBQUVNO0VBRUUsVUFBQTtFQUVBLHFCQUFBO0FBRFI7O0FBS0c7RUFDQyxxQkFBQTtFQUNBLGdDQUFBO0VBQ0EsaUJBQUE7QUFISiIsImZpbGUiOiJhY2NvdW50LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG4ubGFiZWwtY2xhc3N7XHJcbiAgICAtLWlubmVyLXBhZGRpbmctc3RhcnQ6MTJweDtcclxuICAgIC0taW5uZXItcGFkZGluZy1lbmQ6MTBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiA2N3B4O1xyXG4gIH1cclxuICAubGFiZWwtY2xhc3MtYWx7XHJcbiAgICBtYXJnaW4tbGVmdDogNjdweDtcclxuICB9XHJcbiAgLmlvbi1pbnB1dHtcclxuICAgIG1hcmdpbi1sZWZ0OiA2N3B4O1xyXG4gIH1cclxuICAuZHgtbG9va3VwLWZpZWxkIHtcclxuICAgIHBhZGRpbmc6IDVweCAyM3B4IDEycHggNTRweDtcclxuICAgIGZvbnQtc2l6ZTogMWVtO1xyXG4gIH1cclxuICBpb24tY29udGVudCB7XHJcbiAgICAvLy0tYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCByZ2JhKDQzLDkwLDE0OCwxKSAwJSwgcmdiYSg0NSwxMTIsMjI5LDEpIDM1JSwgcmdiYSg0NSwxMTIsMjI5LDEpIDEwMCUpO1xyXG4gICBcclxuICAgICAgaW9uLWl0ZW0ge1xyXG4gICAgICAvLyAtLWJhY2tncm91bmQ6IHJnYigxMjAsIDEyNiwgMTM0KTtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgLy8gbWFyZ2luOiAxNHB4IDA7XHJcbiAgICAgICAgLS1ib3JkZXItcmFkaXVzOiAxNHB4O1xyXG4gICAgICAgLy8gY29sb3I6ICNGRkZGRkY7XHJcbiAgICAgICAgLy9mb250LXdlaWdodDogNjAwO1xyXG4gICB9XHJcbiAgIGlvbi1zZWFyY2hiYXJ7XHJcbiAgICAtLWJvcmRlci1yYWRpdXM6IDE0cHg7XHJcbiAgICAtLWJhY2tncm91bmQ6IHJnYigyNDMsIDI0MywgMjQzKTtcclxuICAgIG1hcmdpbi10b3A6IC0xM3B4O1xyXG4gICB9XHJcbiAgfSJdfQ== */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountPage } from './account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountPageRoutingModule {}\n"]}