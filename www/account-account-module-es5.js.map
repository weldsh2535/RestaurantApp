{"version":3,"sources":["webpack:///src/app/account/account.page.html","webpack:///src/app/account/account.module.ts","webpack:///src/app/account/account.page.ts","webpack:///src/app/account/account.page.scss","webpack:///src/app/account/account-routing.module.ts"],"names":["AccountPageModule","imports","declarations","AccountPage","fb","accountService","alertController","platform","sharedService","router","regform","group","email","phonenumber","required","password","fullName","locationId","type","active","is","usePicker","getAccount","location","subscribe","res","latitude","lat","longtiude","lon","console","log","getAllAccount","listOfAccount","event","get","value","filter","c","status","next","navigate","valid","locationData","longtude","setValue","accountId","create","alert","toString","data","id","updateAccount","reset","presentAlert","ErrorAlert","account","sliding","editMode","close","presentAlertConfirm","header","message","buttons","text","role","cssClass","handler","blah","removeAccount","then","alert1","present","selector","template","routes","path","component","AccountPageRoutingModule","forChild","exports"],"mappings":"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","file":"account-account-module-es5.js","sourcesContent":["export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\" >\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>Account</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form [formGroup]=\\\"regform\\\">\\n    <ion-item>\\n      <!-- <ion-input formControlName=\\\"id\\\" hidden></ion-input> -->\\n      <ion-label>Full Name</ion-label>\\n      <ion-input formControlName=\\\"fullName\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('fullName').valid && regform.get('fullName').touched\\\" > This field is required! </small> \\n      </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Email  </ion-label>\\n      <ion-input formControlName=\\\"email\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('email').valid && regform.get('email').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label position=\\\"floating\\\">Phone number</ion-label>\\n      <ion-input formControlName=\\\"phonenumber\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('phonenumber').valid && regform.get('phonenumber').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Type</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"type\\\" (ngModelChange)=\\\"selectType($event)\\\">\\n        <ion-select-option value=\\\"driver\\\">Driver</ion-select-option>\\n        <ion-select-option value=\\\"restaurant\\\">Restaurant</ion-select-option>\\n        <ion-select-option value=\\\"customer\\\"> Customer</ion-select-option>\\n        <ion-select-option value=\\\"admin\\\">Admin</ion-select-option>\\n      </ion-select>\\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Active</ion-label>\\n      <ion-select interface=\\\"popover\\\" formControlName=\\\"active\\\" (ngModelChange)=\\\"selectActive($event)\\\">\\n        <ion-select-option value=\\\"true\\\">true</ion-select-option>\\n        <ion-select-option value=\\\"false\\\">false</ion-select-option>\\n      </ion-select>\\n     </ion-item>\\n    <!-- <ion-item>\\n      <ion-label>Location On Order</ion-label>\\n      <ion-input formControlName=\\\"LocationOnOrder\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('LocationOnOrder').valid && regform.get('LocationOnOrder').touched\\\" > This field is required! </small> \\n    </ion-item> -->\\n    <ion-item>\\n      <ion-label>First Time Location</ion-label>\\n      <ion-input formControlName=\\\"locationId\\\" type=\\\"text\\\"></ion-input>\\n      <ion-icon name=\\\"location-outline\\\" (click)=\\\"openLocation()\\\"></ion-icon>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('locationId').valid && regform.get('locationId').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <ion-item>\\n      <ion-label>Password</ion-label>\\n      <ion-input formControlName=\\\"password\\\" type=\\\"text\\\"></ion-input>\\n      <small class=\\\"form-text text-muted\\\" *ngIf=\\\"!regform.get('password').valid && regform.get('password').touched\\\" > This field is required! </small> \\n    </ion-item>\\n    <div style=\\\"text-align: center; margin: auto;\\\">\\n      <ion-button id=\\\"add items\\\" (click)=\\\"SaveAccount()\\\"> \\n        <ion-icon slot=\\\"start\\\" name=\\\"add-circle-outline\\\"></ion-icon>\\n        {{editMode?'Update Account':'Add Account'}}</ion-button>\\n    </div>\\n</form>\\n<ion-item-sliding  *ngFor=\\\"let item of listOfAccount\\\" #slidingItem >\\n  <ion-item detail>\\n    <ion-label> {{item.fullName}}</ion-label>\\n    <ion-label> {{item.phonenumber}}</ion-label>\\n  </ion-item>\\n  <ion-item-options side=\\\"start\\\">\\n    <ion-item-option color=\\\"danger\\\" (click)=\\\"edit(item,slidingItem)\\\">\\n   <ion-icon  name=\\\"create\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n   <ion-item-option color=\\\"danger\\\" (click)=\\\"delete(item,slidingItem)\\\">\\n    <ion-icon  name=\\\"trash\\\" slot=\\\"icon-only\\\"></ion-icon></ion-item-option>\\n  </ion-item-options>\\n</ion-item-sliding>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AccountPageRoutingModule } from './account-routing.module';\n\nimport { AccountPage } from './account.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountPageRoutingModule,\n   ReactiveFormsModule\n  ],\n  declarations: [AccountPage]\n})\nexport class AccountPageModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, IonItemSliding, Platform } from '@ionic/angular';\nimport { Account } from 'src/Table/table';\nimport { AccountService } from '../Service/account.service';\nimport { SharedService } from '../Service/shared.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-account',\n  templateUrl: './account.page.html',\n  styleUrls: ['./account.page.scss'],\n})\nexport class AccountPage implements OnInit {\n  regform = this.fb.group({});\n  accountId: number;\n  editMode: boolean;\n  SelectedCustomerId: string;\n  listOfAccount: Account[];\n  usePicker: boolean;\n  latitude: any;\n  longtiude: any;\n  constructor(private fb: FormBuilder,\n              private accountService: AccountService,\n              private alertController: AlertController,\n              private platform: Platform,\n              private sharedService: SharedService,\n              private router: Router) { }\n\n  ngOnInit() {\n    this.regform = this.fb.group({\n      email: ['', Validators.email],\n      phonenumber: ['', Validators.required],\n      password: ['', Validators.required],\n      fullName: ['', Validators.required],\n      locationId: [''],\n      type: [''],\n      active: ['']\n    });\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n      this.platform.is('desktop')\n    ) {\n      this.usePicker = true;\n    }\n    this.getAccount();\n    this.sharedService.location.subscribe(res => {\n      this.latitude = res.lat;\n      this.longtiude = res.lon;\n      console.log(res);\n    });\n  }\n  getAccount() {\n    this.accountService.getAllAccount().subscribe(res => {\n      this.listOfAccount = res;\n      console.log(res);\n    });\n  }\n  selectType(event) {\n    const active = this.regform.get('active').value;\n    this.accountService.getAllAccount().subscribe(res => {\n      if (active !== '') {\n        this.listOfAccount = res.filter(c => c.type === event && c.active === active);\n      }\n      else {\n        this.listOfAccount = res.filter(c => c.type === event);\n      }\n    });\n  }\n  selectActive(event) {\n    const type = this.regform.get('type').value;\n    this.accountService.getAllAccount().subscribe(res => {\n      if (type !== '') {\n        this.listOfAccount = res.filter(c => c.active === event && c.type === type);\n      }\n      else {\n        this.listOfAccount = res.filter(c => c.active === event);\n      }\n    });\n  }\n  openLocation() {\n    this.sharedService.status.next('account');\n    this.router.navigate(['/menu/location']);\n  }\n  SaveAccount() {\n    if (this.regform.valid) {\n      const locationData = {\n        latitude: this.latitude,\n        longtude: this.longtiude\n      };\n      this.regform.get('locationId').setValue(locationData);\n      if (!this.accountId) {\n        this.accountService.create(this.regform.value).subscribe(res => {\n          alert(res.toString());\n        });\n      }\n      else {\n        const data = {\n          id: this.accountId,\n          email: this.regform.get('email').value,\n          phonenumber: this.regform.get('phonenumber').value,\n          password: this.regform.get('password').value,\n          fullName: this.regform.get('fullName').value,\n          locationId: this.regform.get('locationId').value,\n          type: this.regform.get('type').value,\n          active: this.regform.get('active').value\n        };\n        this.accountService.updateAccount(data).subscribe(res => {\n          alert(res.toString());\n        });\n      }\n      this.regform.reset();\n      this.presentAlert();\n      this.accountId = null;\n    }\n    else {\n      this.ErrorAlert();\n    }\n  }\n  edit(account: Account, sliding: IonItemSliding) {\n    this.editMode = true;\n    this.accountId = account.id;\n    this.regform.get('fullName').setValue(account.fullName);\n    this.regform.get('locationId').setValue(account.locationId);\n    this.regform.get('email').setValue(account.email);\n    this.regform.get('password').setValue(account.password);\n    this.regform.get('phonenumber').setValue(account.phonenumber);\n    this.regform.get('active').setValue(account.active);\n    this.regform.get('type').setValue(account.type);\n    sliding.close();\n  }\n  delete(account: Account, sliding: IonItemSliding) {\n    this.presentAlertConfirm(account);\n    sliding.close();\n  }\n  async presentAlertConfirm(account: Account) {\n    const alert1 = await this.alertController.create({\n      header: 'Confirm!',\n      message: '<strong>Are you sure you want delete?</strong>',\n      buttons: [\n        {\n          text: 'Cancel',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {\n            console.log('Confirm Cancel: blah');\n          }\n        }, {\n          text: 'OK',\n          handler: () => {\n            this.accountService.removeAccount(account.id).then(res => {\n              alert(res.toString());\n            });\n            this.regform.reset();\n            this.accountId = null;\n          }\n        }\n      ]\n    });\n\n    await alert1.present();\n  }\n  async ErrorAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Error',\n      // subHeader: 'Subtitle',\n      message: 'Please Enter All field.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n  async presentAlert() {\n    const alert = await this.alertController.create({\n      cssClass: 'my-custom-class',\n      header: 'Account',\n      // subHeader: 'Subtitle',\n      message: 'Account Saved successfully.',\n      buttons: ['OK']\n    });\n\n    await alert.present();\n  }\n}\n","export default \".label-class {\\n  --inner-padding-start:12px;\\n  --inner-padding-end:10px;\\n  margin-left: 67px;\\n}\\n\\n.label-class-al {\\n  margin-left: 67px;\\n}\\n\\n.ion-input {\\n  margin-left: 67px;\\n}\\n\\n.dx-lookup-field {\\n  padding: 5px 23px 12px 54px;\\n  font-size: 1em;\\n}\\n\\nion-content ion-item {\\n  padding: 0;\\n  --border-radius: 14px;\\n}\\n\\nion-content ion-searchbar {\\n  --border-radius: 14px;\\n  --background: rgb(243, 243, 243);\\n  margin-top: -13px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXGFjY291bnQucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0ksMEJBQXNCO0VBQ3RCLHdCQUFvQjtFQUNwQixpQkFBaUI7QUFBckI7O0FBRUU7RUFDRSxpQkFBaUI7QUFDckI7O0FBQ0U7RUFDRSxpQkFBaUI7QUFFckI7O0FBQUU7RUFDRSwyQkFBMkI7RUFDM0IsY0FBYztBQUdsQjs7QUFERTtFQUtNLFVBQVU7RUFFVixxQkFBZ0I7QUFEeEI7O0FBTkU7RUFZRSxxQkFBZ0I7RUFDaEIsZ0NBQWE7RUFDYixpQkFBaUI7QUFGckIiLCJmaWxlIjoiYWNjb3VudC5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuLmxhYmVsLWNsYXNze1xyXG4gICAgLS1pbm5lci1wYWRkaW5nLXN0YXJ0OjEycHg7XHJcbiAgICAtLWlubmVyLXBhZGRpbmctZW5kOjEwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNjdweDtcclxuICB9XHJcbiAgLmxhYmVsLWNsYXNzLWFse1xyXG4gICAgbWFyZ2luLWxlZnQ6IDY3cHg7XHJcbiAgfVxyXG4gIC5pb24taW5wdXR7XHJcbiAgICBtYXJnaW4tbGVmdDogNjdweDtcclxuICB9XHJcbiAgLmR4LWxvb2t1cC1maWVsZCB7XHJcbiAgICBwYWRkaW5nOiA1cHggMjNweCAxMnB4IDU0cHg7XHJcbiAgICBmb250LXNpemU6IDFlbTtcclxuICB9XHJcbiAgaW9uLWNvbnRlbnQge1xyXG4gICAgLy8tLWJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgcmdiYSg0Myw5MCwxNDgsMSkgMCUsIHJnYmEoNDUsMTEyLDIyOSwxKSAzNSUsIHJnYmEoNDUsMTEyLDIyOSwxKSAxMDAlKTtcclxuICAgXHJcbiAgICAgIGlvbi1pdGVtIHtcclxuICAgICAgLy8gLS1iYWNrZ3JvdW5kOiByZ2IoMTIwLCAxMjYsIDEzNCk7XHJcbiAgICAgICAgcGFkZGluZzogMDtcclxuICAgICAgIC8vIG1hcmdpbjogMTRweCAwO1xyXG4gICAgICAgIC0tYm9yZGVyLXJhZGl1czogMTRweDtcclxuICAgICAgIC8vIGNvbG9yOiAjRkZGRkZGO1xyXG4gICAgICAgIC8vZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgfVxyXG4gICBpb24tc2VhcmNoYmFye1xyXG4gICAgLS1ib3JkZXItcmFkaXVzOiAxNHB4O1xyXG4gICAgLS1iYWNrZ3JvdW5kOiByZ2IoMjQzLCAyNDMsIDI0Myk7XHJcbiAgICBtYXJnaW4tdG9wOiAtMTNweDtcclxuICAgfVxyXG4gIH0iXX0= */\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AccountPage } from './account.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountPageRoutingModule {}\n"]}