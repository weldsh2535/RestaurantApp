{"version":3,"sources":["webpack:///src/app/user-role/user-role.page.scss","webpack:///src/app/user-role/user-role.page.html","webpack:///src/app/user-role/user-role-routing.module.ts","webpack:///src/app/user-role/user-role.page.ts","webpack:///src/app/user-role/user-role.module.ts"],"names":["routes","path","component","UserRolePageRoutingModule","imports","forChild","exports","UserRolePage","fb","userRoleService","accountService","functionalityService","platform","alertController","regform","group","isChecked","funwithuser","CheckedProject","NewWithOldArray","selectAllModeVlaue","selectionModeValue","arr_names","Array","deleteRoleId","usePicker","role","id","name","funId","userId","required","remark","is","getFunctionality","ev","target","value","getUerRoleId","subscribe","res","listOfUserRole","forEach","element","push","valid","length","deleteUserRole","user","get","el","fun","SN","create","presentAlert","header","message","buttons","alert","present","getAllFunctionality","listOfFun","listOfFunctinality","store","key","data","e","addedItems","listitems","compName","description","console","log","newCheckBoxValue","selector","template","UserRolePageModule","declarations"],"mappings":"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","file":"user-role-user-role-module-es5.js","sourcesContent":["export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ1c2VyLXJvbGUucGFnZS5zY3NzIn0= */\";","export default \"<ion-header [translucent]=\\\"true\\\">\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-title>User Role</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <form [formGroup]=\\\"regform\\\">\\n    <ion-list>\\n      <ion-item>\\n        <ion-label>User Role </ion-label>\\n        <ion-select name=\\\"userId\\\" formControlName=\\\"userId\\\" interface=\\\"popover\\\" (ionChange)=\\\"selectedEv($event)\\\">\\n          <ion-select-option *ngFor=\\\"let code of role\\\" value=\\\"{{code?.name}}\\\">\\n            {{code?.name}}\\n          </ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n      <div class=\\\"widget-container\\\">\\n        <dx-list #list [dataSource]=\\\"listOfFunctinality\\\" [height]=\\\"400\\\" displayExpr=\\\"compName\\\"\\n          [selectionMode]=\\\"selectionModeValue\\\" [selectAllMode]=\\\"selectAllModeVlaue\\\" \\n          [showSelectionControls]=\\\"true\\\" [selectedItemKeys]=\\\"arr_names\\\"\\n          (onSelectionChanged)=\\\"onSelectionChanged($event)\\\"\\n          (onSelectAllValueChanged)=\\\"onSelectAllValueChanged($event)\\\">\\n        </dx-list>\\n      </div>\\n      <ion-button class=\\\"btn btn-secondary\\\" expand=\\\"block\\\" (click)=\\\"save()\\\">\\n        Save\\n      </ion-button>\\n    </ion-list>\\n  </form>\\n</ion-content>\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserRolePage } from './user-role.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserRolePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class UserRolePageRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AlertController, Platform } from '@ionic/angular';\nimport DataSource from 'devextreme/data/data_source';\nimport {  Account, functionality } from 'src/Table/table';\nimport { FunctionalityService } from '../Service/Functionality.service';\nimport { UserRoleService } from '../Service/userRole.service';\nimport ArrayStore from \"devextreme/data/array_store\";\nimport { AccountService } from '../Service/account.service';\n@Component({\n  selector: 'app-user-role',\n  templateUrl: './user-role.page.html',\n  styleUrls: ['./user-role.page.scss'],\n})\nexport class UserRolePage implements OnInit {\n  regform = this.fb.group({});\n  selectedUser: string;\n  listOfFunctinality: DataSource;\n  selecteFu: string;\n  isChecked: boolean = true;\n  funwithuser: any[] = [];\n  selectedCategory: any;\n  isIndeterminate: boolean;\n  masterCheck: boolean;\n  checkedList: any[];\n  masterSelected: boolean;\n  CheckedProject: any[] = [];\n  NewWithOldArray: any[] = [];\n  selectAllModeVlaue: string = \"page\";\n  selectionModeValue: string = \"all\";\n  arr_names: string[] = new Array();\n  listOfUserRole: { id: string; funId: string; userId: string; remark: string; }[];\n  deleteRoleId: any[] = [];\n  usePicker = false;\n  listOfFun: functionality[];\n  public role =[\n    { id: 1, name: 'admin'},\n    { id: 2, name: 'customer'},\n    { id: 3, name: 'driver'},\n    { id: 4, name: 'restaurant'},\n  ]\n  constructor(private fb: FormBuilder, private userRoleService: UserRoleService,\n    private accountService: AccountService, private functionalityService: FunctionalityService,\n    private platform: Platform,private alertController:AlertController) { }\n  ngOnInit() {\n    this.regform = this.fb.group({\n      funId: [''],\n      userId: ['', Validators.required],\n      remark: [''],\n    });\n    if ((this.platform.is('mobile') && !this.platform.is('hybrid')) ||\n      this.platform.is('desktop')) {\n      this.usePicker = true;\n    }\n    this.getFunctionality();\n  }\n  selectedEv(ev) {\n    let id = ev.target.value;\n    //console.log(ev.target.value);\n    this.userRoleService.getUerRoleId(id).subscribe(res => {\n      this.listOfUserRole = res;\n      this.CheckedProject = [];\n      this.arr_names = [];\n      this.deleteRoleId = [];\n      res.forEach(element => {\n        this.arr_names.push(element.funId);\n        this.deleteRoleId.push(element);\n        this.NewWithOldArray.push(element.funId);\n      //   let listitems = {\n      //     SN: element.funId,\n      //     compName:this.listOfFun.find(c=>c.SN==+element.funId).compName,\n      //     description: this.listOfFun.find(c=>c.SN==+element.funId).description,\n      //     id: this.listOfFun.find(c=>c.SN==+element.funId).id,\n      //     remark:this.listOfFun.find(c=>c.SN==+element.funId).remark\n      //   }\n      //  this.CheckedProject.push(listitems);\n      });\n      //console.log(res)\n    })\n  }\n  save() {\n    if (this.regform.valid) {\n       if (this.CheckedProject.length > 0) {\n        this.deleteRoleId.forEach(element => {\n          this.userRoleService.deleteUserRole(element.id);\n        });\n       let user = this.regform.get(\"userId\").value;\n       this.CheckedProject.forEach(el => {\n              let fun = {\n                funId: el.SN,\n                userId: user,\n                remark: ''\n              }\n              this.userRoleService.create(fun);\n            });\n          }\n    this.presentAlert();\n        // })\n        }\n    else {\n      // notify('Please select Project and User');\n    }\n  }\n  async presentAlert() {\n    const alert = await this.alertController.create({\n        header: 'Confirm! ',\n        message: 'Successfully Inserted!!',\n        buttons: ['OK']\n    });\n    await alert.present();\n}\n \n  getFunctionality() {\n    this.functionalityService.getAllFunctionality().subscribe(res => {\n      this.listOfFun=res;\n      this.listOfFunctinality = new DataSource({\n        store: new ArrayStore({\n          key: \"SN\",\n          data: res\n        })\n      });\n    })\n  \n  }\n\n  onSelectionChanged(e) {\n    let addedItems = e.addedItems;\n    addedItems.forEach(element => {\n      let listitems = {\n        SN: element.SN,\n        compName: element.compName,\n        description: element.description,\n        id: element.id,\n        remark: element.remark\n      }\n     this.CheckedProject.push(listitems);\n    });\n    console.log(this.CheckedProject)\n   // this.CheckedProject.push(addedItems);\n    // let removedItems = e.removedItems;\n    // let found = this.NewWithOldArray.filter(c => c.SN == addedItems[0].SN)\n    // if (found)\n    //   this.NewWithOldArray.push(addedItems[0].SN);\n    // Handler of the \"selectionChanged\" event\n  }\n  onSelectAllValueChanged(e) {\n    let newCheckBoxValue = e.value;\n    // Handler of the \"selectAllValueChanged\" event\n  }\n \n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { UserRolePageRoutingModule } from './user-role-routing.module';\n\nimport { UserRolePage } from './user-role.page';\nimport { DxListModule, DxLookupModule, DxTemplateModule } from 'devextreme-angular';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    UserRolePageRoutingModule,\n    ReactiveFormsModule,\n    DxLookupModule, DxTemplateModule,DxListModule\n  ],\n  declarations: [UserRolePage]\n})\nexport class UserRolePageModule {}\n"]}